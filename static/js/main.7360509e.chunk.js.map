{"version":3,"sources":["yupConfig.ts","config/notifications.ts","config/axios.ts","services/CVService.tsx","models/utils/index.ts","models/cv.ts","config/router/index.ts","models/cvWizard.ts","models/modal.ts","models/index.ts","models/notifier.ts","store.ts","components/SubmitModal/index.tsx","components/ModalContext/index.tsx","components/Notifier/index.tsx","config/common.ts","config/router/RouterConfigGenerator.ts","components/AutocompleteBase/styles.ts","components/AutocompleteBase/index.tsx","components/CheckboxBase/index.tsx","components/CheckboxButtonBase/index.tsx","components/CheckboxWrapper/index.tsx","components/DatePickerBase/styles.ts","components/DatePickerBase/index.tsx","components/FormBlock/index.tsx","components/LinkButton/index.tsx","components/RadioGroupBase/styles.ts","components/RadioGroupBase/index.tsx","components/Spacer/index.tsx","hoc/Wrapper.tsx","firebaseApp.ts","form/Autocomplete/index.tsx","form/Checkbox/index.tsx","form/CheckboxButton/index.tsx","form/DatePicker/index.tsx","form/RadioGroup/index.tsx","form/Select/index.tsx","form/SubmitButton/index.tsx","form/config.ts","form/TextField/index.tsx","routes/CV/shared/containers/AvatarAdd/AvatarLoader.tsx","routes/CV/shared/containers/AvatarAdd/index.tsx","routes/CV/shared/containers/BaseInfo/tempValues.ts","routes/CV/shared/containers/BaseInfo/ContactsInfo.tsx","routes/CV/shared/containers/BaseInfo/PersonalInfo.tsx","routes/CV/shared/containers/BaseInfo/schema.ts","routes/CV/shared/containers/BaseInfo/index.tsx","routes/CV/shared/containers/EducationInfo/tempValues.ts","routes/CV/shared/containers/EducationInfo/LanguageInfo.tsx","routes/CV/shared/containers/EducationInfo/ProfessionInfo.tsx","routes/CV/shared/containers/EducationInfo/schema.ts","routes/CV/shared/containers/EducationInfo/SchoolInfo.tsx","routes/CV/shared/containers/EducationInfo/index.tsx","routes/CV/shared/containers/WorkInfo/AboutSelf.tsx","routes/CV/shared/containers/WorkInfo/KeySkills.tsx","routes/CV/shared/containers/WorkInfo/schema.ts","routes/CV/shared/containers/WorkInfo/tempValues.ts","routes/CV/shared/containers/WorkInfo/WorkPlase.tsx","routes/CV/shared/containers/WorkInfo/index.tsx","routes/CV/shared/CVWizard/config.ts","routes/CV/shared/CVWizard/index.tsx","components/Navigation/Counter.tsx","components/Navigation/index.tsx","routes/CV/shared/NavigationWrapper/index.tsx","routes/CV/CVCreate/index.tsx","routes/CV/CVEdit/index.tsx","routes/CV/CVList/styles.ts","routes/CV/CVList/index.tsx","config/cv.ts","utils/index.ts","routes/CV/CVView/index.tsx","routes/CV/index.ts","routes/NotFound/index.tsx","routes/routes.tsx","theme.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["setLocale","mixed","required","NotificationTypes","notifications","SERVER_ERROR","key","message","options","variant","axiosInstance","axios","create","baseURL","process","url","id","get","this","data","post","patch","delete","setState","state","payload","resetState","initialState","IRouterTypes","cv","createModel","reducers","effects","d","getCVs","CVService","getAllCVs","cvsMap","notifier","enqueueSnackbar","getCVById","getCVbyId","selectedCV","stepStatuses","keySkillsList","cvWizard","isOpen","modal","toggleModal","confirmModal","modalProps","rootModel","notification","dismissed","closeSnackbar","map","removeSnackbar","filter","store","init","plugins","loadingPlugin","models","redux","rootReducers","resetAppStore","SubmitModal","title","onSubmit","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","onClick","color","autoFocus","ModalContextProvider","withConnect","connect","s","memo","displayed","useSnackbar","useEffect","forEach","includes","event","reason","myKey","onExited","_","APP_HTML_TITLE","REACT_APP_HUMAN_READABLE_NAME","MOMENT_DATE_SHORT","EXTRA_DEFAULT","namePrefix","nameSuffix","RouterConfigGenerator","name","routeProps","htmlTitle","_name","_routeProps","_htmlTitle","_simplePath","_extra","extractSimplePath","getDefaultExtra","props","generatePath","pathProps","undefined","path","routerConfig","HOME","type","exact","CV","CV_CREATE","CV_VIEW","CV_EDIT","NOT_FOUND","disabledFlatsCheck","useStyles","makeStyles","spacing","colors","root","paddingTop","paddingBottom","textField","flex","height","dropdownContainer","margin","dropdown","padding","dropdownElement","backBtn","icon","fontSize","fill","alpha","black","darkRed","end","top","right","AutocompleteBase","InputProps","onInputChange","onItemSelected","withoutSearchIcon","classes","normalOptions","inputRoot","listbox","paper","option","endAdornment","noOptionsText","onChange","value","loadingText","renderInput","params","inputProps","className","InputLabelProps","startAdornment","loading","InputAdornment","position","CircularProgress","size","label","CheckboxBase","checkboxProps","FormControlLabel","control","marginRight","border","linkLightSecondary","width","textAlign","lineHeight","box","backgroundColor","linkWater","borderRadius","boxChecked","greyHeather","borderTop","CheckboxButtonBase","checkedIcon","checked","greyRaven","marginBottom","focused","formGroup","marginLeft","CheckboxWrapper","children","helperText","FormControl","component","FormLabel","FormGroup","row","FormHelperText","DatePickerBase","FieldProps","clearable","format","inputVariant","TextFieldComponent","textFieldProps","clearLabel","cancelLabel","FormBlock","Grid","item","xs","Typography","LinkButton","to","noIcon","Link","startIcon","clsx","typography","marginTop","radioGroup","minHeight","radio","radioLabel","subtitle2","RadioGroupBase","error","radioList","formControlProps","radioProps","asterisk","index","Radio","Spacer","fullWidth","flexDirection","childrenLength","Children","toArray","length","Box","display","mr","mb","breakpoints","maxWidth","APP_HEADER_HEIGHT_SM","down","APP_HEADER_HEIGHT_XS","header","alignItems","h2","fontWeight","Wrapper","headerExtra","noHeader","off","routerParams","useParams","extra","container","direction","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","storage","getDefaultElementId","Autocomplete","placeholder","multiple","getElementId","getOptionLabel","autocompleteProps","useFormContext","errors","formState","useController","defaultValue","getDefaultValue","field","ref","invalid","fieldState","onSelected","useCallback","items","Array","isArray","inputRef","result","push","find","findSelectedItem","getOptionSelected","Checkbox","otherFieldProps","innerRef","CheckboxButton","DatePicker","fieldProps","RadioGroup","otherProps","toString","Select","select","MenuItem","SubmitButton","checkDisabled","disabled","clearErrors","isSubmitting","checkLoading","checkIsValid","isValid","e","TextField","img","btnClear","AvatarLoader","avatarAddData","setCvState","register","src","htmlFor","Input","accept","style","target","files","blob","Blob","imageUrl","window","URL","webkitURL","createObjectURL","attachmentData","AvatarAdd","stepHeaders","onBack","baseHeader","methods","useForm","mode","reValidateMode","defaultValues","handleSubmit","values","justifyContent","livingCityTemp","ContactsInfo","md","PersonalInfo","setValue","relocation","useWatch","views","openTo","disableFuture","schema","yup","shape","firstName","lastName","livingCityId","nullable","birthDate","gender","movingCityId","BaseInfo","baseInfoData","subHeaders","contactsInfo","personalInfo","resolver","yupResolver","isDirty","onConfirm","getValues","noValidate","moneyTypesTemp","skillsTemp","schoolTypesTemp","langugesTemp","LanguageInfo","salaryInput","flexGrow","salaryMoneyType","paddingLeft","salaryText","minWidth","ProfessionInfo","noWrap","skills","min","nativeLanguageId","SchoolInfo","useFieldArray","fields","append","remove","schoolTypeId","institutionName","finishYear","faculty","specialization","Divider","EducationInfo","educationInfoData","profession","education","language","AboutSelf","multiline","sm","skillsInput","addIcon","cursor","KeySkills","keySkills","setKeySkillsList","addKeySkills","customSkill","newValue","Math","random","newKeySkills","newValuesKeySkills","setCustomSkill","useState","onKeyDown","preventDefault","workPlace","of","yearStart","matches","yearEnd","keySkillsTemp","monthList","regionTemp","flexWrap","monthStart","errorMessage","flexBasis","caption","WorkPlase","monthEnd","company","site","regionId","positionDuties","WorkInfo","workInfoData","workPlase","aboutSelf","list","baseInfo","educationInfo","workInfo","avatarAdd","resetSelectedCV","setCVWizardState","resetCVWizard","activeStep","setActiveStep","history","useHistory","workplace","base","avatar","onbeforeunload","uploadFileHandler","file","uploadTask","put","Promise","resolve","reject","on","snapshot","err","console","child","getDownloadURL","then","saveCVHandler","additional","createDate","moment","patchCV","setTimeout","catch","postCV","formWizard","lightBlack","subtitle1","done","normalApple","borderColor","Counter","number","isDone","hoverLink","normalBlackberry","active","subHeaderLink","textDecoration","subHeader","doneColor","Navigation","headers","isClickable","Object","keys","flexShrink","href","accordion","boxShadow","isMobile","navigation","step","Accordion","AccordionSummary","expandIcon","AccordionDetails","Paper","elevation","CVCreate","stepNum","config","theme","useTheme","useMediaQuery","mt","CVEdit","customShadows","card","cardHover","headerTitle","h6","cardContent","objectFit","btn","useSelector","useDispatch","resetCVsMap","deleteModalOpen","setDeleteModalOpen","selectedCVId","setSelectedCVId","deleteModalCloseHandler","mx","my","Card","CardHeader","action","IconButton","CardMedia","image","CardContent","deleteCVbyId","male","female","impossible","possible","desirable","businessTripReady","never","ready","sometimes","money","rub","usd","eur","getAgeString","date","age","diff","titles","cases","declOfNum","ageList","_get","optiopns","paragraph","whiteSpace","Create","Edit","List","View","context","alt","salary","moneyTypeId","ml","disablePadding","ListItem","ListItemIcon","ListItemText","primary","foreignLanguages","haveCar","licenseA","licenseB","licenseC","licenseD","licenseE","licenseBE","licenseCE","licenseDE","portfolio","NotFound","Root","from","mapColor","deepBlue","midnightBlue","greyChateau","normalLinkWater","white","lightestYellow","lightBlueberry","lightGray","lightBlackberry","lightApple","lightPlum","lightCranberry","lightStroke","whiteSmoke","normalBlueberry","normalMint","normalOrange","normalRaspberry","normalCranberry","normalYellow","normalPlum","darkApple","darkBlueberry","darkYellow","darkMint","darkLime","darkPlum","darkOrange","darkestYellow","darkestMint","darkestLime","darkestCranberry","sinApple","silverMyst","cheatas","navyBlue","dodgerBlue","silverSand","aliceBlue","lavender","inactiveTabbar","lightestOrange","textSecondary","createTheme","fontFamily","allVariants","fontWeightRegular","fontWeightMedium","fontWeightBold","h1","h3","h4","h5","body1","body2","palette","main","background","default","text","secondary","MuiTextField","autoComplete","App","locale","libInstance","utils","MomentUtils","CssBaseline","anchorOrigin","vertical","horizontal","basename","ModalContext","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7360509e.chunk.js","sourcesContent":["import { setLocale } from 'yup';\n\nsetLocale({\n  mixed: {\n    required: 'Поле должно быть заполнено'\n  }\n});\n","import { OptionsObject } from 'notistack';\nimport { ReactNode } from 'react';\n\nexport enum NotificationTypes {\n  SERVER_ERROR = 'SERVER_ERROR'\n}\n\nexport interface INotification {\n  key: NotificationTypes;\n  message: ReactNode;\n  options?: OptionsObject;\n  dismissed?: boolean;\n}\n\nexport const notifications: Record<NotificationTypes, INotification> = {\n  [NotificationTypes.SERVER_ERROR]: {\n    key: NotificationTypes.SERVER_ERROR,\n    message: 'Ошибка сервера',\n    options: { variant: 'error' }\n  }\n};\n","import axios from 'axios';\n\nexport const axiosInstance = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || ''\n});\n","import { axiosInstance } from 'config/axios';\n\nimport { ICVData, ICVDataMap } from '../models/types/cv';\nimport { IControllerProps, IPostResponse } from './model';\n\nclass CVService implements IControllerProps {\n  url = (id?: string) => `cvs${id ? '/' + id : ''}.json`;\n\n  public getAllCVs() {\n    return axiosInstance.get<ICVDataMap>(this.url());\n  }\n\n  public postCV(data: ICVData) {\n    return axiosInstance.post<IPostResponse>(this.url(), data);\n  }\n\n  public getCVbyId(id: string) {\n    return axiosInstance.get<ICVData>(this.url(id));\n  }\n\n  public patchCV(id: string, data: Partial<ICVData>) {\n    return axiosInstance.patch<typeof data>(this.url(id), data);\n  }\n\n  public deleteCVbyId(id: string) {\n    return axiosInstance.delete(this.url(id));\n  }\n}\n\nexport default new CVService();\n","export function setState<T>(state: T, payload: Partial<T>): T {\n  return { ...state, ...payload };\n}\n\nexport function resetState<T>(initialState: T): () => T {\n  return function (): T {\n    return { ...initialState };\n  };\n}\n","import { createModel } from '@rematch/core';\nimport { notifications } from 'config/notifications';\nimport { CVService } from 'services';\n\nimport { IRootModel } from '.';\nimport { ICVData, ICVDataMap } from './types';\nimport { resetState, setState } from './utils';\n\ninterface IState {\n  cvsMap?: ICVDataMap;\n  selectedCV?: ICVData;\n}\n\nconst initialState: IState = {};\n\nexport const cv = createModel<IRootModel>()({\n  state: initialState,\n  reducers: {\n    setState,\n    resetState: resetState(initialState)\n  },\n  // ToDo: Разобраться с типизацией и диспатча (бага в либе?)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  effects: (d: any) => ({\n    async getCVs() {\n      try {\n        const { data } = await CVService.getAllCVs();\n\n        d.cv.setState({\n          cvsMap: data\n        });\n      } catch (error) {\n        d.notifier.enqueueSnackbar(notifications.SERVER_ERROR);\n      }\n    },\n    async getCVById(id: string) {\n      try {\n        const { data } = await CVService.getCVbyId(id);\n\n        d.cv.setState({\n          selectedCV: data\n        });\n      } catch (error) {\n        d.notifier.enqueueSnackbar(notifications.SERVER_ERROR);\n      }\n    }\n  })\n});\n","import RouterConfigGenerator from './RouterConfigGenerator';\n\nexport interface IIdParams {\n  id: string;\n}\n\nexport enum IRouterTypes {\n  HOME = 'HOME',\n  CV = 'CV',\n  CV_CREATE = 'CV_CREATE',\n  CV_VIEW = 'CV_VIEW',\n  CV_EDIT = 'CV_EDIT',\n  NOT_FOUND = 'NOT_FOUND'\n}\n\nexport const routerConfig = {\n  [IRouterTypes.HOME]: new RouterConfigGenerator({\n    type: IRouterTypes.HOME,\n    name: 'Главная',\n    routeProps: { path: '/', exact: true }\n  }),\n  [IRouterTypes.CV]: new RouterConfigGenerator({\n    type: IRouterTypes.CV,\n    name: 'Мои резюме',\n    routeProps: { path: '/cv', exact: true }\n  }),\n  [IRouterTypes.CV_CREATE]: new RouterConfigGenerator<IIdParams>({\n    type: IRouterTypes.CV_CREATE,\n    name: 'Новое резюме - Шаг',\n    routeProps: { path: '/cv/create/step/:id?', exact: true }\n  }),\n  [IRouterTypes.CV_VIEW]: new RouterConfigGenerator<IIdParams>({\n    type: IRouterTypes.CV_VIEW,\n    name: 'Резюме',\n    routeProps: { path: '/cv/view/:id', exact: true }\n  }),\n  [IRouterTypes.CV_EDIT]: new RouterConfigGenerator<IIdParams>({\n    type: IRouterTypes.CV_EDIT,\n    name: 'Изменение резюме',\n    routeProps: { path: '/cv/edit/:id', exact: true }\n  }),\n  [IRouterTypes.NOT_FOUND]: new RouterConfigGenerator({\n    type: IRouterTypes.NOT_FOUND,\n    name: 'Страница не найдена',\n    routeProps: { path: '*', disabledFlatsCheck: true }\n  })\n};\n","import { createModel } from '@rematch/core';\nimport { KeySkillsType } from 'routes/CV/shared/containers/WorkInfo/tempValues';\n\nimport { IRootModel } from '.';\nimport { IAvatarAdd, IBaseInfo, IEducationInfo, IWorkInfo } from './types';\nimport { resetState, setState } from './utils';\n\ninterface IState {\n  onConfirm?: () => void;\n  isDirty?: boolean;\n  stepStatuses: boolean[];\n  baseInfoData?: IBaseInfo;\n  educationInfoData?: IEducationInfo;\n  workInfoData?: IWorkInfo;\n  avatarAddData?: IAvatarAdd;\n  keySkillsList: KeySkillsType;\n}\n\nconst initialState: IState = {\n  stepStatuses: [],\n  keySkillsList: []\n};\n\nexport const cvWizard = createModel<IRootModel>()({\n  state: initialState,\n  reducers: {\n    setState,\n    resetState: resetState(initialState)\n  }\n});\n","import { createModel } from '@rematch/core';\nimport { IModalProps } from 'components/SubmitModal';\n\nimport { IRootModel } from '.';\nimport { resetState, setState } from './utils';\n\ninterface IState {\n  isOpen: boolean;\n  modalProps?: IModalProps;\n}\n\nconst initialState: IState = { isOpen: false };\n\nexport const modal = createModel<IRootModel>()({\n  state: initialState,\n  reducers: {\n    setState,\n    resetState: resetState(initialState)\n  },\n  // ToDo: Разобраться с типизацией и диспатча (бага в либе?)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  effects: (d: any) => ({\n    toggleModal: () => {\n      d.modal.setState({ isOpen: false });\n    },\n    confirmModal: (modalProps: IModalProps) => {\n      d.modal.setState({ isOpen: true, modalProps });\n    }\n  })\n});\n","import { Models } from '@rematch/core';\n\nimport { cv } from './cv';\nimport { cvWizard } from './cvWizard';\nimport { modal } from './modal';\nimport { notifier } from './notifier';\n\nexport interface IRootModel extends Models<IRootModel> {\n  cv: typeof cv;\n  cvWizard: typeof cvWizard;\n  notifier: typeof notifier;\n  modal: typeof modal;\n}\n\nconst rootModel: IRootModel = {\n  cv,\n  cvWizard,\n  notifier,\n  modal\n};\n\nexport default rootModel;\n","import { createModel } from '@rematch/core';\nimport { INotification, NotificationTypes } from 'config/notifications';\n\nimport { IRootModel } from '.';\n\ninterface IState {\n  notifications: INotification[];\n}\n\nconst initialState: IState = {\n  notifications: []\n};\n\nexport const notifier = createModel<IRootModel>()({\n  state: initialState,\n  reducers: {\n    enqueueSnackbar: (state, notification: Omit<INotification, 'dismissed'>): IState => {\n      return {\n        notifications: [\n          ...state.notifications,\n          {\n            ...notification,\n            dismissed: false\n          }\n        ]\n      };\n    },\n    closeSnackbar(state, key: NotificationTypes): IState {\n      return {\n        notifications: state.notifications.map(notification =>\n          notification.key === key ? { ...notification, dismissed: true } : notification\n        )\n      };\n    },\n    removeSnackbar(state, key: NotificationTypes): IState {\n      return {\n        notifications: state.notifications.filter(notification => notification.key !== key)\n      };\n    }\n  }\n});\n","import { init, RematchDispatch, RematchRootState, RematchStore } from '@rematch/core';\nimport loadingPlugin, { ExtraModelsFromLoading } from '@rematch/loading';\n\nimport models, { IRootModel } from './models';\n\ntype IExtraModels = ExtraModelsFromLoading<IRootModel>;\n\nexport const storeInit = (): RematchStore<IRootModel, IExtraModels> =>\n  init<IRootModel, IExtraModels>({\n    plugins: [loadingPlugin()],\n    models,\n    redux: {\n      rootReducers: {\n        resetAppStore: () => undefined\n      }\n    }\n  });\n\nexport const store = storeInit();\n\nexport type IStore = typeof store;\nexport type IDispatch = RematchDispatch<IRootModel>;\nexport type IRootState = RematchRootState<IRootModel, IExtraModels>;\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle\n} from '@material-ui/core';\nimport React, { FC } from 'react';\n\nexport type IModalProps = {\n  title: string;\n  onSubmit: () => void;\n};\n\nexport interface ISubmitModalProps {\n  isOpen: boolean;\n  toggleModal: () => void;\n  modalProps?: IModalProps;\n}\n\nexport const SubmitModal: FC<ISubmitModalProps> = ({ isOpen, modalProps, toggleModal }) => {\n  if (modalProps) {\n    const { title, onSubmit } = modalProps;\n\n    const handleSubmit = () => {\n      onSubmit();\n      toggleModal();\n    };\n\n    return (\n      <Dialog open={isOpen} onClose={toggleModal}>\n        <DialogTitle>Подтверждение операции</DialogTitle>\n        <DialogContent>\n          <DialogContentText>{title}</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={toggleModal}>Отмена</Button>\n          <Button onClick={handleSubmit} color=\"primary\" autoFocus>\n            Подтвердить\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n\n  return null;\n};\n","import { SubmitModal } from 'components/SubmitModal';\nimport { FC, memo } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { IDispatch, IRootState } from 'store';\n\ntype IConnectedProps = ConnectedProps<typeof withConnect>;\n\nconst ModalContextProvider: FC<IConnectedProps> = ({ isOpen, modalProps, toggleModal }) => {\n  return <SubmitModal isOpen={isOpen} modalProps={modalProps} toggleModal={toggleModal} />;\n};\n\nconst mapState = (s: IRootState) => ({\n  isOpen: s.modal.isOpen,\n  modalProps: s.modal.modalProps\n});\n\nconst mapDispatch = (d: IDispatch) => ({\n  toggleModal: d.modal.toggleModal\n});\n\nconst withConnect = connect(mapState, mapDispatch);\n\nexport default withConnect(memo(ModalContextProvider));\n","import { NotificationTypes } from 'config/notifications';\nimport { useSnackbar } from 'notistack';\nimport { FC, useEffect } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { IDispatch, IRootState } from 'store';\n\ntype IProps = ConnectedProps<typeof withConnect>;\n\nlet displayed: Array<NotificationTypes | string> = [];\n\nconst Notifier: FC<IProps> = ({ notifications, removeSnackbar }) => {\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const storeDisplayed = (id: NotificationTypes) => {\n    displayed = [...displayed, id];\n  };\n\n  const removeDisplayed = (id: NotificationTypes) => {\n    displayed = [...displayed.filter(key => id !== key)];\n  };\n\n  useEffect(() => {\n    notifications.forEach(({ key, message, options = {}, dismissed = false }) => {\n      if (dismissed) {\n        // dismiss snackbar using notistack\n        closeSnackbar(key);\n        return;\n      }\n\n      // do nothing if snackbar is already displayed\n      if (displayed.includes(key)) return;\n\n      // display snackbar using notistack\n      enqueueSnackbar(message, {\n        key,\n        ...options,\n        onClose: (event, reason, myKey) => {\n          if (options.onClose) {\n            options.onClose(event, reason, myKey);\n          }\n        },\n        onExited: (_, myKey) => {\n          // remove this snackbar from redux store\n          removeSnackbar(myKey as NotificationTypes);\n          removeDisplayed(myKey as NotificationTypes);\n        }\n      });\n\n      // keep track of snackbars that we've displayed\n      storeDisplayed(key as NotificationTypes);\n    });\n  }, [notifications, closeSnackbar, enqueueSnackbar, removeSnackbar]);\n\n  return null;\n};\n\nconst mapState = (s: IRootState) => ({\n  notifications: s.notifier.notifications\n});\n\nconst mapDispatch = (d: IDispatch) => ({\n  removeSnackbar: d.notifier.removeSnackbar\n});\n\nconst withConnect = connect(mapState, mapDispatch);\n\nexport default withConnect(Notifier);\n","export const APP_HTML_TITLE = process.env.REACT_APP_HUMAN_READABLE_NAME || '';\nexport const APP_MAX_WIDTH = 1440;\nexport const APP_HEADER_HEIGHT_XS = 32;\nexport const APP_HEADER_HEIGHT_SM = 32;\nexport const APP_PADDING_MAIN_LR_MD = 3;\nexport const APP_PADDING_TOP_XS = APP_HEADER_HEIGHT_XS / 8;\nexport const APP_PADDING_TOP_SM = APP_HEADER_HEIGHT_SM / 8;\nexport const APP_PADDING_BOTTOM = 4.5;\nexport const APP_PADDING_LR_XS = 2.5;\nexport const APP_PADDING_LR_SM = 4;\nexport const APP_PADDING_LR_MD = 11;\nexport const MOMENT_DATE_SHORT = 'DD MMM YYYY';\n","import { APP_HTML_TITLE } from 'config/common';\nimport { generatePath } from 'react-router';\nimport { RouteProps } from 'react-router-dom';\n\nimport { IRouterTypes } from './index';\n\ninterface IExtraProps {\n  namePrefix: string;\n  nameSuffix: string;\n}\n\nconst EXTRA_DEFAULT: IExtraProps = {\n  namePrefix: '',\n  nameSuffix: ''\n};\n\nexport type IExtendedRouteProps = RouteProps & {\n  disabledFlatsCheck?: boolean;\n};\n\ninterface IProps {\n  type: IRouterTypes;\n  name: string;\n  routeProps: IExtendedRouteProps;\n  breadcrumbs?: IRouterTypes[];\n  htmlTitle?: string;\n}\n\nexport type IRouterConfigGenerator<T = unknown> = RouterConfigGenerator<T>;\n\nexport default class RouterConfigGenerator<IGeneratePath = undefined> {\n  private _name: IProps['name'];\n  private _routeProps: IProps['routeProps'];\n  private _htmlTitle: string;\n  private _simplePath: string;\n  private _extra: IExtraProps & { pathProps: IGeneratePath };\n\n  constructor({ name, routeProps, htmlTitle = name }: IProps) {\n    this._name = name;\n    this._routeProps = routeProps;\n    this._htmlTitle = `${APP_HTML_TITLE} - ${htmlTitle}`;\n    this._simplePath = this.extractSimplePath();\n    this._extra = this.getDefaultExtra();\n  }\n\n  get name(): IProps['name'] {\n    return `${this._extra.namePrefix}${this._name}${this._extra.nameSuffix}`;\n  }\n\n  get routeProps(): IProps['routeProps'] {\n    return this._routeProps;\n  }\n\n  get htmlTitle(): string {\n    return this._htmlTitle;\n  }\n\n  set extra({\n    namePrefix,\n    nameSuffix,\n    ...props\n  }: Partial<IExtraProps & { pathProps: IGeneratePath }>) {\n    this._extra = {\n      ...this._extra,\n      ...props,\n      namePrefix: namePrefix || this._extra.namePrefix || EXTRA_DEFAULT.namePrefix,\n      nameSuffix: nameSuffix || this._extra.nameSuffix || EXTRA_DEFAULT.nameSuffix\n    };\n  }\n\n  public reset(): void {\n    this._extra = this.getDefaultExtra();\n  }\n\n  public path(props?: IGeneratePath): string {\n    return generatePath(this._simplePath, props || this._extra.pathProps || undefined);\n  }\n\n  private getDefaultExtra(): IExtraProps & { pathProps: IGeneratePath } {\n    return { ...EXTRA_DEFAULT, pathProps: (undefined as unknown) as IGeneratePath };\n  }\n\n  private extractSimplePath(): string {\n    const path = this._routeProps.path;\n\n    return path ? (typeof path === 'string' ? path : path[0]) : '';\n  }\n}\n","import { alpha, makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(({ spacing, colors }) => ({\n  root: {\n    paddingTop: `${spacing(1)}px !important`,\n    paddingBottom: `${spacing(1)}px !important`\n  },\n  textField: {\n    flex: 1,\n    height: '0.2em'\n  },\n  dropdownContainer: {\n    margin: 0\n  },\n  dropdown: {\n    padding: 0\n  },\n  dropdownElement: {\n    padding: spacing(1.25, 1.5)\n  },\n  backBtn: {\n    padding: 4\n  },\n  icon: {\n    margin: spacing(0, 1.5),\n    fontSize: 21,\n    fill: alpha(colors.black, 0.54)\n  },\n  required: {\n    '& > span': {\n      color: colors.darkRed\n    }\n  },\n  end: {\n    top: 'auto',\n    right: 8\n  }\n}));\n","import { CircularProgress, InputAdornment, TextField, TextFieldProps } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport {\n  Autocomplete as MuiAutocomplete,\n  AutocompleteProps,\n  AutocompleteRenderInputParams\n} from '@material-ui/lab';\nimport React, { ChangeEvent } from 'react';\n\nimport { useStyles } from './styles';\n\nexport type IAutocompleteProps<T> = Omit<\n  AutocompleteProps<T, boolean, boolean, false>,\n  'renderInput' | 'onChange' | 'onInputChange' | 'size' | 'options'\n> & {\n  options: T[] | null;\n  /**\n   * Обрабатывает события изменения текста в строке поиска\n   * @param event\n   */\n  InputProps?: TextFieldProps;\n  onInputChange?: (event: ChangeEvent<HTMLInputElement>) => void;\n  onItemSelected?: (value: T | null) => void;\n  withoutSearchIcon?: boolean;\n};\n\nexport const AutocompleteBase = <T,>({\n  options,\n  InputProps,\n  onInputChange = () => null,\n  onItemSelected = undefined,\n  withoutSearchIcon,\n  ...props\n}: IAutocompleteProps<T>): JSX.Element => {\n  const classes = useStyles();\n  const normalOptions = options || [];\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  const handleChange = (_: ChangeEvent<{}>, value: T | T[] | null) =>\n    onItemSelected?.((value as unknown) as (T & T[]) | null);\n\n  const renderInput = (params: Omit<AutocompleteRenderInputParams, 'size'>) => {\n    (params.inputProps as React.HTMLAttributes<HTMLInputElement>).className = classes.textField;\n    return (\n      <TextField\n        {...params}\n        {...InputProps}\n        onChange={onInputChange}\n        variant=\"outlined\"\n        InputLabelProps={{\n          classes: {\n            root: classes.required\n          }\n        }}\n        InputProps={{\n          ...params.InputProps,\n          startAdornment: !withoutSearchIcon ? (\n            <>\n              <SearchIcon className={classes.icon} /> {params.InputProps.startAdornment}\n            </>\n          ) : (\n            params.InputProps.startAdornment\n          ),\n          endAdornment: (\n            <>\n              {props.loading && (\n                <InputAdornment position=\"end\">\n                  <CircularProgress size={16} />\n                </InputAdornment>\n              )}\n              {params.InputProps.endAdornment}\n            </>\n          )\n        }}\n      />\n    );\n  };\n\n  return (\n    <MuiAutocomplete\n      classes={{\n        inputRoot: classes.root,\n        listbox: classes.dropdown,\n        paper: classes.dropdownContainer,\n        option: classes.dropdownElement,\n        endAdornment: classes.end\n      }}\n      options={normalOptions}\n      noOptionsText=\"Нет подходящих вариантов\"\n      onChange={handleChange}\n      loadingText=\"Поиск...\"\n      renderInput={renderInput}\n      {...props}\n    />\n  );\n};\n","import {\n  Checkbox,\n  CheckboxProps,\n  FormControlLabel,\n  FormControlLabelProps,\n  makeStyles\n} from '@material-ui/core';\nimport React, { FC } from 'react';\n\nexport interface ICheckboxBaseProps extends Omit<FormControlLabelProps, 'control'> {\n  checkboxProps?: CheckboxProps;\n}\n\nconst useStyles = makeStyles({\n  label: {\n    fontSize: 14\n  }\n});\n\nexport const CheckboxBase: FC<ICheckboxBaseProps> = ({ checkboxProps, ...props }) => {\n  const classes = useStyles();\n  return (\n    <FormControlLabel\n      control={<Checkbox size=\"small\" {...checkboxProps} />}\n      classes={{ label: classes.label }}\n      {...props}\n    />\n  );\n};\n","import {\n  Checkbox,\n  CheckboxProps,\n  FormControlLabel,\n  FormControlLabelProps,\n  makeStyles\n} from '@material-ui/core';\nimport React, { FC } from 'react';\n\nexport interface ICheckboxButtonBaseProps extends Omit<FormControlLabelProps, 'control'> {\n  checkboxProps?: CheckboxProps;\n}\n\nconst useStyles = makeStyles(({ colors, spacing }) => ({\n  root: {\n    position: 'relative',\n    marginRight: spacing(1.25),\n    border: `1px solid ${colors.linkLightSecondary}`\n  },\n  label: {\n    fontSize: 14,\n    position: 'absolute',\n    width: 35,\n    height: 30,\n    textAlign: 'center',\n    lineHeight: '30px'\n  },\n  box: {\n    width: 35,\n    height: 30,\n    backgroundColor: colors.linkWater,\n    borderRadius: 0,\n\n    '&:hover': {\n      backgroundColor: colors.linkLightSecondary\n    }\n  },\n  boxChecked: {\n    backgroundColor: colors.greyHeather,\n    borderTop: `4px solid ${colors.linkLightSecondary}`,\n\n    '&:hover': {\n      backgroundColor: `${colors.linkLightSecondary} !important`\n    }\n  }\n}));\n\nexport const CheckboxButtonBase: FC<ICheckboxButtonBaseProps> = ({ checkboxProps, ...props }) => {\n  const classes = useStyles();\n  return (\n    <FormControlLabel\n      control={\n        <Checkbox\n          {...checkboxProps}\n          icon={<span></span>}\n          checkedIcon={<span></span>}\n          classes={{ root: classes.box, checked: classes.boxChecked }}\n        />\n      }\n      classes={{ root: classes.root, label: classes.label }}\n      {...props}\n    />\n  );\n};\n","import { FormControl, FormGroup, FormHelperText, FormLabel, makeStyles } from '@material-ui/core';\nimport React, { FC, ReactNode } from 'react';\n\ninterface ICheckboxWrapperProps {\n  label: string;\n  helperText?: string;\n  children: ReactNode;\n}\n\nconst useStyles = makeStyles(({ colors, spacing }) => ({\n  title: {\n    fontSize: 14,\n    color: colors.greyRaven,\n    marginBottom: spacing(0.625)\n  },\n  focused: {\n    color: `${colors.greyRaven} !important`\n  },\n  formGroup: {\n    marginLeft: spacing(1.5)\n  }\n}));\n\nexport const CheckboxWrapper: FC<ICheckboxWrapperProps> = ({ label, children, helperText }) => {\n  const classes = useStyles();\n\n  return (\n    <FormControl component=\"fieldset\">\n      <FormLabel component=\"label\" classes={{ root: classes.title, focused: classes.focused }}>\n        {label}\n      </FormLabel>\n      <FormGroup row className={classes.formGroup}>\n        {children}\n      </FormGroup>\n      <FormHelperText>{helperText}</FormHelperText>\n    </FormControl>\n  );\n};\n","import { alpha, makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(({ colors, spacing }) => ({\n  required: {\n    '& > span': {\n      color: colors.darkRed\n    }\n  },\n  icon: {\n    margin: spacing(0, 1.5),\n    fontSize: 24,\n    fill: alpha(colors.black, 0.54)\n  }\n}));\n","import { TextField, TextFieldProps } from '@material-ui/core';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport { DatePicker as MuiDatePicker, DatePickerProps } from '@material-ui/pickers';\nimport React, { FC } from 'react';\n\nimport { useStyles } from './styles';\n\nexport interface IDatePickerProps extends DatePickerProps {\n  FieldProps: TextFieldProps;\n}\n\nexport const DatePickerBase: FC<IDatePickerProps> = ({ FieldProps, ...props }) => {\n  const classes = useStyles();\n\n  return (\n    <MuiDatePicker\n      {...props}\n      clearable\n      format=\"DD.MM.YYYY\"\n      inputVariant=\"outlined\"\n      InputProps={{\n        startAdornment: <CalendarTodayIcon className={classes.icon} />\n      }}\n      TextFieldComponent={(textFieldProps: Omit<TextFieldProps, 'size'>) => (\n        <TextField\n          InputLabelProps={{\n            classes: {\n              root: classes.required\n            }\n          }}\n          {...textFieldProps}\n          {...FieldProps}\n        />\n      )}\n      clearLabel=\"Очистить\"\n      cancelLabel=\"Отмена\"\n    />\n  );\n};\n","import { Grid, Typography } from '@material-ui/core';\nimport React, { FC, ReactNode } from 'react';\nimport { ISubHeader } from 'routes/CV/shared/model';\n\ninterface IFormBlockProps {\n  title: ISubHeader;\n  children: ReactNode;\n}\n\nexport const FormBlock: FC<IFormBlockProps> = ({ title, children }) => {\n  return (\n    <>\n      <Grid item xs={12}>\n        <Typography variant=\"h3\" id={title.id}>\n          {title.title}\n        </Typography>\n      </Grid>\n      {children}\n    </>\n  );\n};\n","import { Button, makeStyles } from '@material-ui/core';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport clsx from 'clsx';\nimport React, { FC } from 'react';\nimport { Link, LinkProps } from 'react-router-dom';\n\ntype ILinkButtonProps = LinkProps & {\n  className?: string;\n  noIcon?: boolean;\n};\n\nconst useStyles = makeStyles(() => ({\n  backBtn: {\n    width: 'fit-content'\n  }\n}));\n\nexport const LinkButton: FC<ILinkButtonProps> = ({ to, className, noIcon = false, children }) => {\n  const classes = useStyles();\n  return (\n    <Button\n      component={Link}\n      to={to}\n      startIcon={noIcon ? null : <ArrowBackIosIcon />}\n      className={clsx(classes.backBtn, className)}\n    >\n      {children}\n    </Button>\n  );\n};\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(({ spacing, colors, typography }) => ({\n  label: {\n    fontSize: 14,\n    marginTop: spacing(-1),\n    marginBottom: spacing(0.25),\n    color: colors.greyRaven\n  },\n  required: {\n    color: colors.darkRed\n  },\n  radioGroup: {\n    minHeight: 44\n  },\n  radio: {\n    marginLeft: 0\n  },\n  radioLabel: {\n    ...typography.subtitle2\n  }\n}));\n","import {\n  FormControl,\n  FormControlLabel,\n  FormControlProps,\n  FormHelperText,\n  FormLabel,\n  Radio,\n  RadioGroup,\n  RadioGroupProps,\n  RadioProps\n} from '@material-ui/core';\nimport React, { FC } from 'react';\n\nimport { useStyles } from './styles';\n\ntype IRadioListType = {\n  value: string;\n  label: string;\n};\n\nexport interface IRadioGroupBaseProps extends RadioGroupProps {\n  label?: string;\n  error?: boolean;\n  helperText?: string;\n  radioList: IRadioListType[];\n  formControlProps: FormControlProps<'fieldset'>;\n  radioProps?: RadioProps;\n}\n\nexport const RadioGroupBase: FC<IRadioGroupBaseProps> = ({\n  label,\n  error,\n  helperText,\n  radioList,\n  formControlProps,\n  radioProps,\n  ...props\n}) => {\n  const classes = useStyles();\n\n  return (\n    <FormControl component=\"fieldset\" {...formControlProps}>\n      <FormLabel\n        component=\"label\"\n        focused={false}\n        classes={{ root: classes.label, asterisk: classes.required }}\n      >\n        {label}\n      </FormLabel>\n      <RadioGroup {...props} classes={{ root: classes.radioGroup }}>\n        {radioList.map((item, index) => (\n          <FormControlLabel\n            key={index}\n            value={item.value}\n            label={item.label}\n            control={<Radio size=\"small\" {...radioProps} />}\n            classes={{ root: classes.radio, label: classes.radioLabel }}\n          />\n        ))}\n      </RadioGroup>\n      {helperText && <FormHelperText error={error}>{helperText}</FormHelperText>}\n    </FormControl>\n  );\n};\n","import Box, { BoxProps } from '@material-ui/core/Box';\nimport React, { Children, FC, ReactNode } from 'react';\n\ninterface ISpacerProps extends BoxProps {\n  children: ReactNode;\n  fullWidth?: boolean;\n  spacing?: number;\n  flexDirection?: 'row' | 'column';\n}\n\nexport const Spacer: FC<ISpacerProps> = ({\n  children,\n  fullWidth = false,\n  spacing = 1,\n  flexDirection = 'row',\n  ...props\n}: ISpacerProps) => {\n  const childrenLength = Children.toArray(children).length;\n\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection={flexDirection}\n      width={fullWidth ? '100%' : 'fit-content'}\n      {...props}\n    >\n      {children\n        ? Children.toArray(children).map((item, index) => (\n            <Box\n              key={index}\n              {...(flexDirection === 'row' && childrenLength !== index + 1\n                ? { mr: spacing }\n                : null)}\n              {...(flexDirection === 'column' && childrenLength !== index + 1\n                ? { mb: spacing }\n                : null)}\n            >\n              {item}\n            </Box>\n          ))\n        : null}\n    </Box>\n  );\n};\n","import { Grid, makeStyles, Theme, Typography } from '@material-ui/core';\nimport {\n  APP_MAX_WIDTH,\n  APP_PADDING_BOTTOM,\n  APP_PADDING_LR_MD,\n  APP_PADDING_LR_SM,\n  APP_PADDING_LR_XS,\n  APP_PADDING_TOP_SM,\n  APP_PADDING_TOP_XS\n} from 'config/common';\nimport { IRouterConfigGenerator } from 'config/router/RouterConfigGenerator';\nimport { FC } from 'react';\nimport { useParams } from 'react-router';\n\nconst useStyles = makeStyles<Theme>(({ spacing, breakpoints, typography }) => ({\n  root: {\n    maxWidth: APP_MAX_WIDTH,\n    margin: '0 auto',\n    flex: 1,\n    padding: spacing(APP_PADDING_TOP_SM, APP_PADDING_LR_MD, APP_PADDING_BOTTOM),\n\n    [breakpoints.down('sm')]: {\n      padding: spacing(APP_PADDING_TOP_SM, APP_PADDING_LR_SM, APP_PADDING_BOTTOM)\n    },\n\n    [breakpoints.down('xs')]: {\n      padding: spacing(APP_PADDING_TOP_XS, APP_PADDING_LR_XS, APP_PADDING_BOTTOM)\n    }\n  },\n  header: {\n    margin: spacing(3, 0),\n\n    [breakpoints.down('xs')]: {\n      margin: spacing(3, 0)\n    }\n  },\n  title: {\n    display: 'flex',\n    alignItems: 'center',\n\n    [breakpoints.down('xs')]: {\n      ...typography.h2,\n      fontWeight: 700\n    }\n  }\n}));\n\ninterface IProps {\n  routerConfig: IRouterConfigGenerator;\n  headerExtra?: JSX.Element;\n  noHeader?: boolean;\n  noBreadCrumbs?: boolean;\n  noHorizontalPadding?: boolean;\n  off?: boolean;\n}\n\nconst Wrapper: FC<IProps> = ({ routerConfig, headerExtra, noHeader, off, children }) => {\n  const classes = useStyles();\n  const routerParams = useParams();\n  routerConfig.extra = { pathProps: routerParams };\n\n  if (off) {\n    return <>{children}</>;\n  }\n\n  let header: JSX.Element | undefined;\n  if (!noHeader) {\n    header = (\n      <Grid container className={classes.header}>\n        <Typography variant=\"h1\" className={classes.title}>\n          {routerConfig.name}\n        </Typography>\n      </Grid>\n    );\n  }\n\n  return (\n    <Grid container direction=\"column\" className={classes.root}>\n      {headerExtra}\n      {header}\n      {children}\n    </Grid>\n  );\n};\n\nexport default Wrapper;\n","import 'firebase/storage';\n\nimport firebase from 'firebase/app';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCQ-YIBbLpl1SOF7KzaSR0v7HLz61N-yno',\n  authDomain: 'reacttestproject-70f65.firebaseapp.com',\n  databaseURL: 'https://reacttestproject-70f65.firebaseio.com',\n  projectId: 'reacttestproject-70f65',\n  storageBucket: 'reacttestproject-70f65.appspot.com',\n  messagingSenderId: '899992592973',\n  appId: '1:899992592973:web:3d949363094bca6d223204'\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst storage = firebase.storage();\n\nexport { firebase as default, storage };\n","import { AutocompleteBase, IAutocompleteProps } from 'components';\nimport React, { useCallback } from 'react';\nimport { useController, useFormContext } from 'react-hook-form';\nimport { Optional } from 'utils/types';\n\ntype IOptionType = {\n  id: string;\n  name: string;\n};\n\ntype IProps<T> = Optional<IAutocompleteProps<T>, 'onInputChange' | 'onItemSelected'> & {\n  name: string;\n  label?: string;\n  placeholder?: string;\n  required?: boolean;\n  getElementId?: (value: T) => string | undefined;\n};\n\nconst getDefaultElementId = (item: unknown) => (item as IOptionType).id;\nconst Autocomplete = ({\n  name,\n  label,\n  placeholder,\n  required,\n  multiple,\n  onInputChange,\n  options,\n  getElementId = getDefaultElementId,\n  getOptionLabel,\n  onItemSelected,\n  ...autocompleteProps\n}: IProps<IOptionType>): JSX.Element => {\n  const {\n    control,\n    formState: { errors }\n  } = useFormContext();\n  const {\n    field: { ref, onChange, ...inputProps },\n    fieldState: { invalid }\n  } = useController({\n    name,\n    control,\n    defaultValue: getDefaultValue(autocompleteProps.defaultValue)\n  });\n\n  function getDefaultValue(option: IOptionType | IOptionType[] | null | undefined) {\n    if (option && !(option as IOptionType[]).length) {\n      return (option as IOptionType)?.id;\n    }\n\n    if (option && (option as IOptionType[]).length) {\n      return (option as IOptionType[]).map(item => item.id);\n    }\n\n    return multiple ? [] : '';\n  }\n\n  const getOptionLabelOrDefault = (option: IOptionType): string => {\n    if (getOptionLabel) {\n      return getOptionLabel(option);\n    } else {\n      return option ? option.name : '';\n    }\n  };\n\n  const onSelected = useCallback(\n    (items: IOptionType | IOptionType[] | null) => {\n      if (Array.isArray(items)) {\n        onChange(items.map(getElementId));\n      } else {\n        onChange(items ? getElementId(items) : null);\n      }\n      onItemSelected?.((items as unknown) as (IOptionType & IOptionType[]) | null);\n    },\n\n    [getElementId, onItemSelected, onChange]\n  );\n\n  const findSelectedItem = (id: string | string[]): IOptionType | IOptionType[] | null => {\n    let result;\n\n    if (Array.isArray(id)) {\n      result = [];\n      id.forEach(item => {\n        result.push(options?.find(option => option.id === item));\n      });\n    } else {\n      result = options?.find(option => option.id === id);\n    }\n\n    if (result) {\n      return result;\n    } else {\n      return null;\n    }\n  };\n\n  return (\n    <AutocompleteBase\n      {...autocompleteProps}\n      InputProps={{\n        ...inputProps,\n        inputRef: ref,\n        label,\n        required,\n        placeholder,\n        fullWidth: true,\n        error: invalid,\n        helperText: errors[name]?.message,\n        ...autocompleteProps.InputProps\n      }}\n      options={options}\n      multiple={multiple}\n      onInputChange={onInputChange}\n      getOptionLabel={getOptionLabelOrDefault}\n      onItemSelected={onSelected}\n      value={findSelectedItem(inputProps.value)}\n      {...(multiple\n        ? { getOptionSelected: (option: IOptionType, value: IOptionType) => value.id === option.id }\n        : null)}\n    />\n  );\n};\n\nexport default Autocomplete;\n","import {\n  FormControl,\n  FormControlLabelProps,\n  FormGroup,\n  FormHelperText,\n  FormLabel,\n  makeStyles\n} from '@material-ui/core';\nimport { CheckboxBase } from 'components';\nimport React, { FC } from 'react';\nimport { useController, useFormContext } from 'react-hook-form';\n\ninterface ICheckboxProps extends Omit<FormControlLabelProps, 'name' | 'control'> {\n  name: string;\n  title: string;\n  helperText?: string;\n}\n\nconst useStyles = makeStyles(({ colors }) => ({\n  title: {\n    fontSize: 14,\n    color: colors.greyRaven\n  },\n  focused: {\n    color: `${colors.greyRaven} !important`\n  }\n}));\n\nconst Checkbox: FC<ICheckboxProps> = ({ name, title, helperText, ...props }) => {\n  const {\n    control,\n    formState: { errors }\n  } = useFormContext();\n\n  const {\n    field: { ref, value, ...otherFieldProps },\n    fieldState: { invalid }\n  } = useController({\n    name,\n    control,\n    defaultValue: false\n  });\n\n  const classes = useStyles();\n\n  return (\n    <FormControl component=\"fieldset\" error={invalid}>\n      <FormLabel component=\"label\" classes={{ root: classes.title, focused: classes.focused }}>\n        {title}\n      </FormLabel>\n      <FormGroup>\n        <CheckboxBase checked={value} innerRef={ref} {...otherFieldProps} {...props} />\n      </FormGroup>\n      <FormHelperText>{errors[name]?.message || helperText}</FormHelperText>\n    </FormControl>\n  );\n};\n\nexport default Checkbox;\n","import { FormControlLabelProps } from '@material-ui/core';\nimport { CheckboxButtonBase } from 'components';\nimport React, { FC } from 'react';\nimport { useController, useFormContext } from 'react-hook-form';\n\ninterface ICheckboxButtonProps extends Omit<FormControlLabelProps, 'name' | 'control'> {\n  name: string;\n}\n\nconst CheckboxButton: FC<ICheckboxButtonProps> = ({ name, ...props }) => {\n  const { control } = useFormContext();\n\n  const {\n    field: { ref, value, ...otherFieldProps }\n  } = useController({\n    name,\n    control,\n    defaultValue: false\n  });\n\n  return <CheckboxButtonBase innerRef={ref} checked={value} {...otherFieldProps} {...props} />;\n};\n\nexport default CheckboxButton;\n","import { DatePickerProps } from '@material-ui/pickers';\nimport { DatePickerBase } from 'components';\nimport React, { FC } from 'react';\nimport { useController, useFormContext } from 'react-hook-form';\n\ninterface IDatePickerProps extends Omit<DatePickerProps, 'onChange' | 'value'> {\n  name: string;\n  label?: string;\n  placeholder?: string;\n  required?: boolean;\n}\n\nconst DatePicker: FC<IDatePickerProps> = ({ name, label, placeholder, required, ...props }) => {\n  const {\n    control,\n    formState: { errors }\n  } = useFormContext();\n\n  const {\n    field: { ref, ...fieldProps },\n    fieldState: { invalid }\n  } = useController({\n    name,\n    control,\n    defaultValue: null\n  });\n\n  return (\n    <DatePickerBase\n      {...props}\n      {...fieldProps}\n      name={name}\n      FieldProps={{\n        error: invalid,\n        helperText: errors[name]?.message,\n        label,\n        placeholder,\n        required,\n        ref: ref\n      }}\n    />\n  );\n};\n\nexport default DatePicker;\n","import { IRadioGroupBaseProps, RadioGroupBase } from 'components';\nimport React, { FC } from 'react';\nimport { useController, useFormContext } from 'react-hook-form';\n\ninterface IRadioGroupProps extends Omit<IRadioGroupBaseProps, 'onChange' | 'value'> {\n  name: string;\n}\n\nconst RadioGroup: FC<IRadioGroupProps> = ({ name, ...props }) => {\n  const {\n    control,\n    formState: { errors }\n  } = useFormContext();\n\n  const {\n    field: { ref, ...otherProps },\n    fieldState: { invalid }\n  } = useController({\n    name,\n    control,\n    defaultValue: null\n  });\n\n  const helperText = errors[name]?.message?.toString();\n\n  return (\n    <RadioGroupBase\n      {...props}\n      {...otherProps}\n      radioProps={{ ref: ref }}\n      name={name}\n      helperText={helperText}\n      error={invalid}\n    />\n  );\n};\n\nexport default RadioGroup;\n","import { makeStyles, MenuItem, TextField, TextFieldProps } from '@material-ui/core';\nimport { FC } from 'react';\nimport { useController, useFormContext } from 'react-hook-form';\n\ntype IOptions = {\n  id: string;\n  name: string | number;\n};\n\ninterface IProps extends Omit<TextFieldProps, 'name'> {\n  name: string;\n  options: IOptions[];\n}\n\nconst useStyles = makeStyles(({ colors }) => ({\n  required: {\n    '& > span': {\n      color: colors.darkRed\n    }\n  }\n}));\n\nconst Select: FC<IProps> = ({ name, options, helperText, ...props }) => {\n  const classes = useStyles();\n  const {\n    control,\n    formState: { errors }\n  } = useFormContext();\n\n  const {\n    field,\n    fieldState: { invalid }\n  } = useController({\n    name,\n    control,\n    defaultValue: props.defaultValue || ''\n  });\n\n  return (\n    <TextField\n      select\n      error={invalid}\n      variant=\"outlined\"\n      helperText={errors[name]?.message || helperText}\n      InputLabelProps={{\n        classes: {\n          root: classes.required\n        }\n      }}\n      {...field}\n      {...props}\n    >\n      {options.map((item, index) => (\n        <MenuItem value={item.id} key={index}>\n          {item.name}\n        </MenuItem>\n      ))}\n    </TextField>\n  );\n};\n\nexport default Select;\n","import { Button, ButtonProps } from '@material-ui/core';\nimport React, { FC, memo, ReactNode } from 'react';\nimport { useFormContext } from 'react-hook-form';\n\nimport { FORM_ERROR } from '../config';\n\ninterface IProps extends ButtonProps {\n  icon?: ReactNode;\n  loading?: boolean;\n}\n\nconst SubmitButton: FC<IProps> = ({ icon, disabled, loading, children, onClick, ...props }) => {\n  const { formState, clearErrors } = useFormContext();\n  const { isSubmitting } = formState;\n\n  const checkLoading = loading || isSubmitting;\n  let checkDisabled;\n  if (disabled === undefined) {\n    const checkIsValid = !formState.isValid;\n    checkDisabled = checkLoading || checkIsValid;\n  } else {\n    checkDisabled = disabled;\n  }\n\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    onClick?.(e);\n    clearErrors(FORM_ERROR);\n  };\n\n  return (\n    <Button\n      type=\"submit\"\n      onClick={handleClick}\n      disabled={checkDisabled}\n      {...props}\n      startIcon={!checkLoading && icon ? icon : undefined}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport default memo(SubmitButton);\n","export const FORM_ERROR = 'FORM_ERROR';\n","import { makeStyles, TextField as TextFieldMui, TextFieldProps } from '@material-ui/core';\nimport { FC } from 'react';\nimport { useController, useFormContext } from 'react-hook-form';\n\ninterface IProps extends Omit<TextFieldProps, 'name'> {\n  name: string;\n}\n\nconst useStyles = makeStyles(({ colors }) => ({\n  required: {\n    '& > span': {\n      color: colors.darkRed\n    }\n  }\n}));\n\nconst TextField: FC<IProps> = ({ name, helperText, defaultValue, ...props }) => {\n  const classes = useStyles();\n  const {\n    control,\n    formState: { errors }\n  } = useFormContext();\n\n  const {\n    field: { ref, ...fieldProps },\n    fieldState: { invalid }\n  } = useController({\n    name,\n    control,\n    defaultValue: defaultValue || ''\n  });\n\n  return (\n    <TextFieldMui\n      error={invalid}\n      variant=\"outlined\"\n      helperText={errors[name]?.message || helperText}\n      InputLabelProps={{\n        classes: {\n          root: classes.required\n        }\n      }}\n      inputRef={ref}\n      {...fieldProps}\n      {...props}\n    />\n  );\n};\n\nexport default TextField;\n","import { Button, Grid, Input, makeStyles } from '@material-ui/core';\nimport React, { FC } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { IDispatch, IRootState } from 'store';\n\ntype IConnectedProps = ConnectedProps<typeof withConnect>;\ntype IAvatarLoaderProps = IConnectedProps;\n\nconst useStyles = makeStyles(({ spacing }) => ({\n  img: {\n    width: '100%',\n    maxWidth: 400\n  },\n  btnClear: {\n    marginLeft: spacing(2)\n  }\n}));\n\nconst AvatarLoaderContainer: FC<IAvatarLoaderProps> = ({ avatarAddData, setCvState }) => {\n  const classes = useStyles();\n  const { register } = useFormContext();\n  const onChangeImg = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target && event.target.files) {\n      const img: File = event.target.files[0];\n      const blob = new Blob([img], { type: 'image/jpeg' });\n      const urlCreator = window.URL || window.webkitURL;\n      const imageUrl = urlCreator.createObjectURL(blob);\n      setCvState({ avatarAddData: { ...avatarAddData, attachmentData: img, url: imageUrl } });\n    }\n  };\n\n  const clearHandler = () => {\n    setCvState({ avatarAddData: { ...avatarAddData, attachmentData: undefined, url: '' } });\n  };\n\n  return (\n    <>\n      {avatarAddData?.url && (\n        <Grid item xs={12}>\n          <img src={avatarAddData?.url || ''} className={classes.img} />\n        </Grid>\n      )}\n      <Grid item xs={12}>\n        <label htmlFor=\"contained-button-file\">\n          <Input\n            id=\"contained-button-file\"\n            {...register('attachmentData')}\n            type=\"file\"\n            inputProps={{ accept: 'image/*' }}\n            style={{ display: 'none' }}\n            onChange={onChangeImg}\n          />\n          <Button variant=\"contained\" component=\"span\" color=\"primary\">\n            Выбрать фото\n          </Button>\n        </label>\n        {avatarAddData?.url && (\n          <Button variant=\"contained\" onClick={clearHandler} className={classes.btnClear}>\n            Очистить\n          </Button>\n        )}\n      </Grid>\n    </>\n  );\n};\n\nconst mapState = (s: IRootState) => ({\n  avatarAddData: s.cvWizard.avatarAddData\n});\n\nconst mapDispatch = (d: IDispatch) => ({\n  setCvState: d.cvWizard.setState\n});\n\nconst withConnect = connect(mapState, mapDispatch);\n\nexport const AvatarLoader = withConnect(AvatarLoaderContainer);\n","import { Button, Grid, Typography } from '@material-ui/core';\nimport { Spacer } from 'components';\nimport { SubmitButton } from 'form';\nimport { IAvatarAdd } from 'models/types/cv';\nimport React, { FC } from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { IDispatch, IRootState } from 'store';\nimport { IFormData } from 'utils/types';\n\nimport { AvatarLoader } from './AvatarLoader';\n\ntype IConnectedProps = ConnectedProps<typeof withConnect>;\n\nconst AvatarAddContainer: FC<IFormData & IConnectedProps> = ({\n  stepHeaders,\n  onSubmit,\n  onBack,\n  avatarAddData,\n  setCvState\n}) => {\n  const { baseHeader } = stepHeaders;\n\n  const methods = useForm<IAvatarAdd>({\n    mode: 'onChange',\n    reValidateMode: 'onChange',\n    defaultValues: avatarAddData\n  });\n\n  const submitForm = (values: IAvatarAdd) => {\n    onSubmit();\n    setCvState({ avatarAddData: values });\n  };\n\n  return (\n    <FormProvider {...methods}>\n      <form onSubmit={methods.handleSubmit(submitForm)}>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <Typography variant=\"h2\">{baseHeader}</Typography>\n          </Grid>\n\n          <AvatarLoader />\n\n          <Grid item xs={12}>\n            <Spacer spacing={3} fullWidth justifyContent=\"flex-end\">\n              <Button color=\"secondary\" onClick={onBack}>\n                Назад\n              </Button>\n              <SubmitButton>Сохранить</SubmitButton>\n            </Spacer>\n          </Grid>\n        </Grid>\n      </form>\n    </FormProvider>\n  );\n};\n\nconst mapState = (s: IRootState) => ({\n  avatarAddData: s.cvWizard.avatarAddData\n});\n\nconst mapDispatch = (d: IDispatch) => ({\n  setCvState: d.cvWizard.setState\n});\n\nconst withConnect = connect(mapState, mapDispatch);\n\nexport const AvatarAdd = withConnect(AvatarAddContainer);\n","export const livingCityTemp = [\n  { id: '1wef2112d23', name: 'Москва' },\n  { id: '21ed23fd23d', name: 'Санкт-Петербург' },\n  { id: '31e23fd2ds2', name: 'Сочи' },\n  { id: '4f2d23d32w2', name: 'Пермь' }\n];\n","import { Grid } from '@material-ui/core';\nimport { Autocomplete, TextField } from 'form';\nimport React, { ReactElement } from 'react';\n\nimport { livingCityTemp } from './tempValues';\n\nexport const ContactsInfo = (): ReactElement => {\n  return (\n    <>\n      <Grid item xs={12} md={6}>\n        <TextField name=\"lastName\" label=\"Фамилия\" required fullWidth />\n      </Grid>\n      <Grid item xs={12} md={6}>\n        <TextField name=\"firstName\" label=\"Имя\" required fullWidth />\n      </Grid>\n      <Grid item xs={12}>\n        <Autocomplete\n          options={livingCityTemp}\n          name=\"livingCityId\"\n          label=\"Город проживания\"\n          required\n          fullWidth\n        />\n      </Grid>\n    </>\n  );\n};\n","import { Grid } from '@material-ui/core';\nimport { Autocomplete, DatePicker, RadioGroup } from 'form';\nimport React, { ReactElement, useEffect } from 'react';\nimport { useFormContext, useWatch } from 'react-hook-form';\n\nimport { livingCityTemp } from './tempValues';\n\nexport const PersonalInfo = (): ReactElement => {\n  const { setValue } = useFormContext();\n  const relocation = useWatch({\n    name: 'relocation'\n  });\n\n  useEffect(() => {\n    if (relocation === 'impossible' || relocation === null) {\n      setValue('movingCityId', null);\n    }\n  }, [relocation, setValue]);\n\n  return (\n    <>\n      <Grid item xs={12} md={6}>\n        <DatePicker\n          name=\"birthDate\"\n          label=\"Год рождения\"\n          required\n          views={['year', 'month', 'date']}\n          openTo=\"year\"\n          disableFuture\n          fullWidth\n        />\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <RadioGroup\n          name=\"gender\"\n          label=\"Пол\"\n          radioList={[\n            { value: 'male', label: 'Мужской' },\n            { value: 'female', label: 'Женский' }\n          ]}\n          formControlProps={{\n            fullWidth: true,\n            required: true\n          }}\n          row\n        />\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <RadioGroup\n          name=\"businessTripReady\"\n          label=\"Готовность к командировкам\"\n          radioList={[\n            { value: 'never', label: 'Никогда' },\n            { value: 'ready', label: 'Готов' },\n            { value: 'sometimes', label: 'Иногда' }\n          ]}\n          formControlProps={{\n            fullWidth: true\n          }}\n          row\n        />\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <RadioGroup\n          name=\"relocation\"\n          label=\"Переезд\"\n          radioList={[\n            { value: 'impossible', label: 'Невозможен' },\n            { value: 'possible', label: 'Возможен' },\n            { value: 'desirable', label: 'Желателен' }\n          ]}\n          formControlProps={{\n            fullWidth: true\n          }}\n          row\n        />\n      </Grid>\n\n      {relocation && relocation !== 'impossible' && (\n        <Grid item xs={12}>\n          <Autocomplete\n            options={livingCityTemp}\n            name=\"movingCityId\"\n            label=\"Город проживания\"\n            fullWidth\n          />\n        </Grid>\n      )}\n    </>\n  );\n};\n","import * as yup from 'yup';\n\nconst schema = yup.object().shape({\n  firstName: yup.string().required(),\n  lastName: yup.string().required(),\n  livingCityId: yup.string().required().nullable(),\n  birthDate: yup.string().required().nullable(),\n  gender: yup.string().required().nullable(),\n  movingCityId: yup.string().nullable()\n});\n\nexport { schema };\n","import { yupResolver } from '@hookform/resolvers/yup';\nimport { Button, Grid, Typography } from '@material-ui/core';\nimport { FormBlock, Spacer } from 'components';\nimport { SubmitButton } from 'form';\nimport { IBaseInfo } from 'models/types/cv';\nimport React, { FC, useEffect } from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { IDispatch, IRootState } from 'store';\nimport { IFormData } from 'utils/types';\n\nimport { ContactsInfo } from './ContactsInfo';\nimport { PersonalInfo } from './PersonalInfo';\nimport { schema } from './schema';\n\ntype IConnectedProps = ConnectedProps<typeof withConnect>;\n\nconst BaseInfoContainer: FC<IFormData & IConnectedProps> = ({\n  baseInfoData,\n  stepHeaders,\n  stepStatuses,\n  onSubmit,\n  onBack,\n  setCvState\n}) => {\n  const { baseHeader, subHeaders } = stepHeaders;\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const [contactsInfo, personalInfo] = subHeaders!;\n\n  const methods = useForm<IBaseInfo>({\n    mode: 'onChange',\n    reValidateMode: 'onChange',\n    resolver: yupResolver(schema),\n    defaultValues: baseInfoData\n  });\n\n  useEffect(() => {\n    if (methods.formState.isDirty) {\n      setCvState({\n        onConfirm: () => setCvState({ baseInfoData: methods.getValues() }),\n        isDirty: true\n      });\n    }\n\n    return () => {\n      setCvState({ onConfirm: undefined, isDirty: undefined });\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [methods.formState.isDirty, setCvState]);\n\n  const submitForm = (values: IBaseInfo) => {\n    onSubmit();\n    setCvState({ baseInfoData: values, stepStatuses: [...stepStatuses, true] });\n  };\n\n  return (\n    <FormProvider {...methods}>\n      <form onSubmit={methods.handleSubmit(submitForm)} noValidate>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <Typography variant=\"h2\">{baseHeader}</Typography>\n          </Grid>\n\n          <FormBlock title={contactsInfo}>\n            <ContactsInfo />\n          </FormBlock>\n\n          <FormBlock title={personalInfo}>\n            <PersonalInfo />\n          </FormBlock>\n\n          <Grid item xs={12}>\n            <Spacer spacing={3} fullWidth justifyContent=\"flex-end\">\n              <Button color=\"secondary\" onClick={onBack}>\n                Назад\n              </Button>\n              <SubmitButton>Далее</SubmitButton>\n            </Spacer>\n          </Grid>\n        </Grid>\n      </form>\n    </FormProvider>\n  );\n};\n\nconst mapState = (s: IRootState) => ({\n  baseInfoData: s.cvWizard.baseInfoData,\n  stepStatuses: s.cvWizard.stepStatuses\n});\n\nconst mapDispatch = (d: IDispatch) => ({\n  setCvState: d.cvWizard.setState\n});\n\nconst withConnect = connect(mapState, mapDispatch);\n\nexport const BaseInfo = withConnect(BaseInfoContainer);\n","export const moneyTypesTemp = [\n  { id: 'rub', name: 'RUB' },\n  { id: 'usd', name: 'USD' },\n  { id: 'eur', name: 'EUR' }\n];\n\nexport const skillsTemp = [\n  { id: '1dwd23d234', name: 'Frontend' },\n  { id: '2dwd23d234', name: 'Backend' },\n  { id: '3dwd23d234', name: 'Product owner' },\n  { id: '4dwd23d234', name: 'Analyst' }\n];\n\nexport const schoolTypesTemp = [\n  { id: 'primary', name: 'Начальное' },\n  { id: 'secondary', name: 'Среднее' },\n  { id: 'higher', name: 'Высшее' }\n];\n\nexport const langugesTemp = [\n  { id: '1dwd23d214', name: 'Русский' },\n  { id: '2dwd24d234', name: 'Английский' },\n  { id: '3dwd25d234', name: 'Французский' },\n  { id: '4dwd26d234', name: 'Китайский' },\n  { id: '5dwd26d234', name: 'Испанский' },\n  { id: '6dwd26d234', name: 'Чешский' },\n  { id: '7dwd26d234', name: 'Арабский' }\n];\n","import { Grid } from '@material-ui/core';\nimport { Autocomplete } from 'form';\nimport React, { ReactElement } from 'react';\n\nimport { langugesTemp } from './tempValues';\n\nexport const LanguageInfo = (): ReactElement => {\n  return (\n    <>\n      <Grid item xs={12} md={6}>\n        <Autocomplete required options={langugesTemp} name=\"nativeLanguageId\" label=\"Родной язык\" />\n      </Grid>\n      <Grid item xs={12} md={6}>\n        <Autocomplete\n          multiple\n          options={langugesTemp}\n          name=\"foreignLanguages\"\n          label=\"Иностранные языки\"\n          withoutSearchIcon\n        />\n      </Grid>\n    </>\n  );\n};\n","import { Box, Grid, makeStyles, Typography } from '@material-ui/core';\nimport { Autocomplete, Select, TextField } from 'form';\nimport React, { ReactElement } from 'react';\n\nimport { moneyTypesTemp, skillsTemp } from './tempValues';\n\nconst useStyles = makeStyles(({ spacing }) => ({\n  salaryInput: {\n    flexGrow: 2,\n    marginRight: spacing(1)\n  },\n  salaryMoneyType: {\n    width: 100,\n    marginRight: spacing(1),\n    '& .MuiOutlinedInput-inputAdornedEnd': {\n      paddingLeft: spacing(0.625)\n    }\n  },\n  salaryText: {\n    minWidth: 61,\n    margin: spacing('auto', 0)\n  }\n}));\n\nexport const ProfessionInfo = (): ReactElement => {\n  const classes = useStyles();\n  return (\n    <>\n      <Grid item xs={12} md={6}>\n        <TextField name=\"position\" label=\"Желаемая должность\" required fullWidth />\n      </Grid>\n      <Grid item xs={12} md={6}>\n        <Box display=\"flex\">\n          <TextField className={classes.salaryInput} name=\"salary\" label=\"Желаемая з/п\" />\n          <Select\n            name=\"moneyTypeId\"\n            options={moneyTypesTemp}\n            className={classes.salaryMoneyType}\n            defaultValue=\"rub\"\n          />\n          <Typography className={classes.salaryText} noWrap>\n            на руки\n          </Typography>\n        </Box>\n      </Grid>\n      <Grid item xs={12}>\n        <Autocomplete\n          multiple\n          required\n          options={skillsTemp}\n          name=\"skills\"\n          label=\"Профессиональная область\"\n          withoutSearchIcon\n        />\n      </Grid>\n    </>\n  );\n};\n","import * as yup from 'yup';\n\nconst schema = yup.object().shape({\n  position: yup.string().required(),\n  skills: yup.array().min(1, 'Заполните хотя бы одну область'),\n  nativeLanguageId: yup.string().required().nullable()\n});\n\nexport { schema };\n","import { Button, Divider, Grid } from '@material-ui/core';\nimport { Spacer } from 'components';\nimport { Autocomplete, TextField } from 'form';\nimport { Education } from 'models/types/cv';\nimport React, { ReactElement } from 'react';\nimport { useFieldArray } from 'react-hook-form';\n\nimport { schoolTypesTemp } from './tempValues';\n\nexport const SchoolInfo = (): ReactElement => {\n  const { fields, append, remove } = useFieldArray({\n    name: 'education'\n  });\n\n  const appendEducation = () => {\n    append({});\n  };\n\n  const removeEducation = () => {\n    remove(fields.length - 1);\n  };\n\n  return (\n    <>\n      {((fields as unknown) as Education[]).map((field, index) => {\n        return (\n          <Grid key={field.id} container item spacing={3}>\n            <Grid item xs={12}>\n              <Autocomplete\n                options={schoolTypesTemp}\n                name={`education.${index}.schoolTypeId`}\n                label=\"Уровень образования\"\n                defaultValue={schoolTypesTemp.find(item => item.id === field.schoolTypeId)}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={8}>\n              <TextField\n                name={`education.${index}.institutionName`}\n                label=\"Учебное заведение\"\n                defaultValue={field.institutionName}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={4}>\n              <TextField\n                name={`education.${index}.finishYear`}\n                label=\"Год окончания\"\n                defaultValue={field.finishYear}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                name={`education.${index}.faculty`}\n                label=\"Факультет\"\n                defaultValue={field.faculty}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                name={`education.${index}.specialization`}\n                label=\"Специальность\"\n                defaultValue={field.specialization}\n                fullWidth\n              />\n            </Grid>\n            {fields.length !== index + 1 && (\n              <Grid item xs={12}>\n                <Divider />\n              </Grid>\n            )}\n          </Grid>\n        );\n      })}\n      <Grid item xs={12}>\n        <Spacer>\n          <Button onClick={appendEducation}>Добавить</Button>\n          <Button onClick={removeEducation} disabled={fields.length === 1} color=\"secondary\">\n            Удалить\n          </Button>\n        </Spacer>\n      </Grid>\n    </>\n  );\n};\n","import { yupResolver } from '@hookform/resolvers/yup';\nimport { Button, Grid, Typography } from '@material-ui/core';\nimport { FormBlock, Spacer } from 'components';\nimport { SubmitButton } from 'form';\nimport { IEducationInfo } from 'models/types/cv';\nimport React, { FC, useEffect } from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { IDispatch, IRootState } from 'store';\nimport { IFormData } from 'utils/types';\n\nimport { LanguageInfo } from './LanguageInfo';\nimport { ProfessionInfo } from './ProfessionInfo';\nimport { schema } from './schema';\nimport { SchoolInfo } from './SchoolInfo';\n\ntype IConnectedProps = ConnectedProps<typeof withConnect>;\n\nconst EducationInfoContainer: FC<IFormData & IConnectedProps> = ({\n  educationInfoData,\n  stepHeaders,\n  onSubmit,\n  onBack,\n  setCvState,\n  stepStatuses\n}) => {\n  const { baseHeader, subHeaders } = stepHeaders;\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const [profession, education, language] = subHeaders!;\n\n  const methods = useForm<IEducationInfo>({\n    mode: 'onChange',\n    reValidateMode: 'onChange',\n    resolver: yupResolver(schema),\n    defaultValues: educationInfoData\n  });\n\n  useEffect(() => {\n    if (methods.formState.isDirty) {\n      setCvState({\n        onConfirm: () => setCvState({ educationInfoData: methods.getValues() }),\n        isDirty: true\n      });\n    }\n\n    return () => {\n      setCvState({ onConfirm: undefined, isDirty: undefined });\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [methods.formState.isDirty, setCvState]);\n\n  const submitForm = (values: IEducationInfo) => {\n    onSubmit();\n    setCvState({ educationInfoData: values, stepStatuses: [...stepStatuses, true] });\n  };\n\n  return (\n    <FormProvider {...methods}>\n      <form onSubmit={methods.handleSubmit(submitForm)} noValidate>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <Typography variant=\"h2\">{baseHeader}</Typography>\n          </Grid>\n\n          <FormBlock title={profession}>\n            <ProfessionInfo />\n          </FormBlock>\n\n          <FormBlock title={education}>\n            <SchoolInfo />\n          </FormBlock>\n\n          <FormBlock title={language}>\n            <LanguageInfo />\n          </FormBlock>\n\n          <Grid item xs={12}>\n            <Spacer spacing={3} fullWidth justifyContent=\"flex-end\">\n              <Button color=\"secondary\" onClick={onBack}>\n                Назад\n              </Button>\n              <SubmitButton>Далее</SubmitButton>\n            </Spacer>\n          </Grid>\n        </Grid>\n      </form>\n    </FormProvider>\n  );\n};\n\nconst mapState = (s: IRootState) => ({\n  educationInfoData: s.cvWizard.educationInfoData,\n  stepStatuses: s.cvWizard.stepStatuses\n});\n\nconst mapDispatch = (d: IDispatch) => ({\n  setCvState: d.cvWizard.setState\n});\n\nconst withConnect = connect(mapState, mapDispatch);\n\nexport const EducationInfo = withConnect(EducationInfoContainer);\n","import { Grid } from '@material-ui/core';\nimport { CheckboxWrapper } from 'components';\nimport { Checkbox, CheckboxButton, TextField } from 'form';\nimport React, { ReactElement } from 'react';\n\nexport const AboutSelf = (): ReactElement => {\n  return (\n    <>\n      <Grid item xs={12}>\n        <TextField name=\"aboutSelf\" label=\"О себе\" multiline fullWidth />\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <Checkbox name=\"haveCar\" title=\"Наличие автомобиля\" label=\"Есть личный автомобиль\" />\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <CheckboxWrapper label=\"Категория прав\">\n          <CheckboxButton label=\"A\" name=\"licenseA\" />\n          <CheckboxButton label=\"B\" name=\"licenseB\" />\n          <CheckboxButton label=\"C\" name=\"licenseC\" />\n          <CheckboxButton label=\"D\" name=\"licenseD\" />\n          <CheckboxButton label=\"E\" name=\"licenseE\" />\n          <CheckboxButton label=\"BE\" name=\"licenseBE\" />\n          <CheckboxButton label=\"CE\" name=\"licenseCE\" />\n          <CheckboxButton label=\"DE\" name=\"licenseDE\" />\n        </CheckboxWrapper>\n      </Grid>\n      <Grid item xs={12}>\n        <TextField name=\"portfolio\" label=\"Ссылка на портфолио\" fullWidth />\n      </Grid>\n    </>\n  );\n};\n","import { Grid, makeStyles, TextField } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport { Autocomplete } from 'form';\nimport React, { FC, useState } from 'react';\nimport { useFormContext } from 'react-hook-form';\n\nimport { KeySkillsType } from './tempValues';\n\ninterface IKeySkillsProps {\n  keySkills: {\n    keySkillsList: KeySkillsType;\n    setKeySkillsList: (value: KeySkillsType) => void;\n  };\n}\n\nconst useStyles = makeStyles(({ breakpoints, spacing, colors }) => ({\n  skillsInput: {\n    marginTop: spacing(1),\n    width: '50%',\n\n    [breakpoints.down('xs')]: {\n      width: '100%'\n    }\n  },\n  addIcon: {\n    cursor: 'pointer',\n    color: colors.darkRed,\n\n    '&:hover': {\n      filter: 'brightness(0.9)'\n    }\n  }\n}));\n\nexport const KeySkills: FC<IKeySkillsProps> = ({\n  keySkills: { keySkillsList, setKeySkillsList }\n}) => {\n  const classes = useStyles();\n\n  const { setValue, getValues } = useFormContext();\n\n  const addKeySkills = () => {\n    if (customSkill !== '') {\n      const newValue = { id: (Math.random() * 1000).toString(), name: customSkill };\n      const newKeySkills = [...keySkillsList, newValue];\n      setKeySkillsList(newKeySkills);\n\n      const newValuesKeySkills = [...getValues('keySkills'), newValue.id];\n      setValue('keySkills', newValuesKeySkills);\n\n      setCustomSkill('');\n    }\n  };\n  const enterPressHandler = (event: React.KeyboardEvent) => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      addKeySkills();\n    }\n  };\n\n  const [customSkill, setCustomSkill] = useState('');\n  const onChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setCustomSkill(event.target.value);\n  };\n\n  return (\n    <>\n      <Grid item xs={12}>\n        <Autocomplete\n          multiple\n          options={keySkillsList}\n          name=\"keySkills\"\n          label=\"Ключевые навыки\"\n          withoutSearchIcon\n        />\n\n        <TextField\n          className={classes.skillsInput}\n          label=\"Добавить навык\"\n          value={customSkill}\n          onChange={onChangeHandler}\n          onKeyDown={enterPressHandler}\n          InputProps={{\n            endAdornment: <AddIcon className={classes.addIcon} onClick={addKeySkills} />\n          }}\n        />\n      </Grid>\n    </>\n  );\n};\n","import * as yup from 'yup';\n\nconst schema = yup.object().shape({\n  workPlace: yup.array().of(\n    yup.object().shape({\n      yearStart: yup.string().matches(/(^$)|(^[0-9]{4}$)/g, 'Неверный формат года'),\n      yearEnd: yup.string().matches(/(^$)|(^[0-9]{4}$)/g, 'Неверный формат года')\n    })\n  )\n});\n\nexport { schema };\n","export type KeySkillsType = Array<{ id: string; name: string }>;\n\nexport const keySkillsTemp = [\n  { id: '1dwd23d234', name: 'Agile' },\n  { id: '2dwd23d234', name: 'React' },\n  { id: '3dwd23d234', name: 'JS' },\n  { id: '4dwd23d234', name: 'Angular' },\n  { id: '5dwd23d234', name: 'Redux' },\n  { id: '6dwd23d234', name: 'Scrum' },\n  { id: '7dwd23d234', name: 'Figma' },\n  { id: '8dwd23d234', name: 'VS Code' }\n];\n\nexport const monthList = [\n  { id: '1', name: 'Январь' },\n  { id: '2', name: 'Февраль' },\n  { id: '3', name: 'Март' },\n  { id: '4', name: 'Апрель' },\n  { id: '5', name: 'Май' },\n  { id: '6', name: 'Июнь' },\n  { id: '7', name: 'Июль' },\n  { id: '8', name: 'Август' },\n  { id: '9', name: 'Сентябрь' },\n  { id: '10', name: 'Октябрь' },\n  { id: '11', name: 'Ноябрь' },\n  { id: '12', name: 'Декабрь' }\n];\n\nexport const regionTemp = [\n  { id: '1wef2112d23', name: 'Москвская область' },\n  { id: '21ed23fd23d', name: 'Ленинградская область' },\n  { id: '31e23fd2ds2', name: 'Краснодарский край' },\n  { id: '4f2d23d32w2', name: 'Пермский край' }\n];\n","import { Button, Divider, Grid, makeStyles } from '@material-ui/core';\nimport { Spacer } from 'components';\nimport { Autocomplete, Select, TextField } from 'form';\nimport { WorkPlace } from 'models/types/cv';\nimport React, { ReactElement } from 'react';\nimport { useFieldArray } from 'react-hook-form';\n\nimport { monthList, regionTemp } from './tempValues';\n\nconst useStyles = makeStyles(({ spacing, typography, colors }) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  monthStart: {\n    flexGrow: 2,\n    marginRight: spacing(1)\n  },\n  yearStart: {\n    width: 80\n  },\n  errorMessage: {\n    flexBasis: '100%',\n    ...typography.caption,\n    color: colors.darkRed\n  }\n}));\n\nexport const WorkPlase = (): ReactElement => {\n  const classes = useStyles();\n\n  const { fields, append, remove } = useFieldArray({\n    name: 'workPlace'\n  });\n\n  const appendEducation = () => {\n    append({});\n  };\n\n  const removeEducation = () => {\n    remove(fields.length - 1);\n  };\n\n  return (\n    <>\n      {((fields as unknown) as WorkPlace[]).map((field, index) => {\n        return (\n          <Grid key={field.id} container item spacing={3}>\n            <Grid item xs={12} sm={6} className={classes.container}>\n              <Select\n                name={`workPlace.${index}.monthStart`}\n                label=\"Начало работы\"\n                options={monthList}\n                className={classes.monthStart}\n                defaultValue={field.monthStart}\n              />\n              <TextField\n                name={`workPlace.${index}.yearStart`}\n                placeholder=\"Год\"\n                className={classes.yearStart}\n                defaultValue={field.yearStart}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6} className={classes.container}>\n              <Select\n                name={`workPlace.${index}.monthEnd`}\n                label=\"Окончание работы\"\n                options={monthList}\n                className={classes.monthStart}\n                defaultValue={field.monthEnd}\n              />\n              <TextField\n                name={`workPlace.${index}.yearEnd`}\n                placeholder=\"Год\"\n                className={classes.yearStart}\n                defaultValue={field.yearEnd}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                name={`workPlace.${index}.company`}\n                label=\"Организация\"\n                defaultValue={field.company}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                name={`workPlace.${index}.site`}\n                label=\"Сайт\"\n                defaultValue={field.site}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Autocomplete\n                options={regionTemp}\n                name={`workPlace.${index}.regionId`}\n                label=\"Регион\"\n                defaultValue={regionTemp.find(item => item.id === field.regionId)}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                name={`workPlace.${index}.position`}\n                label=\"Должность\"\n                defaultValue={field.position}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                name={`workPlace.${index}.positionDuties`}\n                label=\"Должностные обязанности\"\n                defaultValue={field.positionDuties}\n                fullWidth\n                multiline\n              />\n            </Grid>\n\n            {fields.length !== index + 1 && (\n              <Grid item xs={12}>\n                <Divider />\n              </Grid>\n            )}\n          </Grid>\n        );\n      })}\n      <Grid item xs={12}>\n        <Spacer>\n          <Button onClick={appendEducation}>Добавить</Button>\n          <Button onClick={removeEducation} disabled={fields.length === 1} color=\"secondary\">\n            Удалить\n          </Button>\n        </Spacer>\n      </Grid>\n    </>\n  );\n};\n","import { yupResolver } from '@hookform/resolvers/yup';\nimport { Button, Grid, Typography } from '@material-ui/core';\nimport { FormBlock, Spacer } from 'components';\nimport { SubmitButton } from 'form';\nimport { IWorkInfo } from 'models/types/cv';\nimport React, { FC, useCallback, useEffect } from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { IDispatch, IRootState } from 'store';\nimport { IFormData } from 'utils/types';\n\nimport { AboutSelf } from './AboutSelf';\nimport { KeySkills } from './KeySkills';\nimport { schema } from './schema';\nimport { keySkillsTemp, KeySkillsType } from './tempValues';\nimport { WorkPlase } from './WorkPlase';\n\ntype IConnectedProps = ConnectedProps<typeof withConnect>;\n\nconst WorkInfoContainer: FC<IFormData & IConnectedProps> = ({\n  workInfoData,\n  stepHeaders,\n  onSubmit,\n  onBack,\n  setCvState,\n  stepStatuses,\n  keySkillsList\n}) => {\n  const { baseHeader, subHeaders } = stepHeaders;\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const [workPlase, keySkills, aboutSelf] = subHeaders!;\n\n  const methods = useForm<IWorkInfo>({\n    mode: 'onChange',\n    reValidateMode: 'onChange',\n    resolver: yupResolver(schema),\n    defaultValues: workInfoData\n  });\n\n  useEffect(() => {\n    if (methods.formState.isDirty) {\n      setCvState({\n        onConfirm: () => setCvState({ workInfoData: methods.getValues() }),\n        isDirty: true\n      });\n    }\n\n    return () => {\n      setCvState({ onConfirm: undefined, isDirty: undefined });\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [methods.formState.isDirty, setCvState]);\n\n  const setKeySkillsList = useCallback(\n    (list: KeySkillsType) => {\n      setCvState({ keySkillsList: list });\n    },\n    [setCvState]\n  );\n\n  useEffect(() => {\n    if (keySkillsList.length === 0) {\n      setKeySkillsList(keySkillsTemp);\n    }\n  }, [keySkillsList, setKeySkillsList]);\n\n  const submitForm = (values: IWorkInfo) => {\n    onSubmit();\n    setCvState({ workInfoData: values, stepStatuses: [...stepStatuses, true] });\n  };\n\n  return (\n    <FormProvider {...methods}>\n      <form onSubmit={methods.handleSubmit(submitForm)} noValidate>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <Typography variant=\"h2\">{baseHeader}</Typography>\n          </Grid>\n\n          <FormBlock title={workPlase}>\n            <WorkPlase />\n          </FormBlock>\n\n          <FormBlock title={keySkills}>\n            <KeySkills keySkills={{ keySkillsList, setKeySkillsList }} />\n          </FormBlock>\n\n          <FormBlock title={aboutSelf}>\n            <AboutSelf />\n          </FormBlock>\n\n          <Grid item xs={12}>\n            <Spacer spacing={3} fullWidth justifyContent=\"flex-end\">\n              <Button color=\"secondary\" onClick={onBack}>\n                Назад\n              </Button>\n              <SubmitButton>Далее</SubmitButton>\n            </Spacer>\n          </Grid>\n        </Grid>\n      </form>\n    </FormProvider>\n  );\n};\n\nconst mapState = (s: IRootState) => ({\n  workInfoData: s.cvWizard.workInfoData,\n  stepStatuses: s.cvWizard.stepStatuses,\n  keySkillsList: s.cvWizard.keySkillsList\n});\n\nconst mapDispatch = (d: IDispatch) => ({\n  setCvState: d.cvWizard.setState\n});\n\nconst withConnect = connect(mapState, mapDispatch);\n\nexport const WorkInfo = withConnect(WorkInfoContainer);\n","import { IStepHeadersType } from 'routes/CV/shared/model';\n\nexport const stepHeaders: IStepHeadersType = {\n  baseInfo: {\n    baseHeader: 'Основная информация',\n    subHeaders: [\n      { id: 'contactsInfo', title: 'Контактные данные' },\n      { id: 'personalInfo', title: 'Персональные данные' }\n    ]\n  },\n  educationInfo: {\n    baseHeader: 'Образование',\n    subHeaders: [\n      { id: 'profession', title: 'Специальность' },\n      { id: 'educationalInstitution', title: 'Учебное учреждение' },\n      { id: 'languageProficiency', title: 'Владение языками' }\n    ]\n  },\n  workInfo: {\n    baseHeader: 'Опыт работы',\n    subHeaders: [\n      { id: 'workPlase', title: 'Место работы' },\n      { id: 'keySkills', title: 'Ключевые навыки' },\n      { id: 'aboutSelf', title: 'О себе' }\n    ]\n  },\n  avatarAdd: {\n    baseHeader: 'Добавление Фотографии'\n  }\n};\n","import { Box, CircularProgress } from '@material-ui/core';\nimport { routerConfig } from 'config/router';\nimport { storage } from 'firebaseApp';\nimport { ICVData } from 'models/types/cv';\nimport moment from 'moment';\nimport { useSnackbar } from 'notistack';\nimport React, { useEffect } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { CVService } from 'services';\nimport { IDispatch, IRootState } from 'store';\n\nimport { AvatarAdd, BaseInfo, EducationInfo, WorkInfo } from '../containers';\nimport { stepHeaders } from './config';\n\ntype IConnectedProps = ConnectedProps<typeof withConnect>;\n\ninterface ICVWizardProps extends IConnectedProps {\n  activeStep: number;\n  id?: string;\n  setActiveStep?: (step: number) => void;\n}\n\nconst CVWizard = ({\n  activeStep,\n  id,\n  setActiveStep,\n  selectedCV,\n  loading,\n  getCVById,\n  resetSelectedCV,\n  isDirty,\n  setCVWizardState,\n  baseInfoData,\n  educationInfoData,\n  workInfoData,\n  avatarAddData,\n  resetCVWizard\n}: ICVWizardProps): JSX.Element => {\n  const history = useHistory();\n  const { enqueueSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    if (id) {\n      getCVById(id);\n    }\n\n    return () => {\n      resetSelectedCV();\n    };\n  }, [id, getCVById, resetSelectedCV]);\n\n  useEffect(() => {\n    if (selectedCV) {\n      const { workplace, education, base, avatar } = selectedCV;\n\n      setCVWizardState({\n        baseInfoData: base,\n        educationInfoData: education,\n        workInfoData: workplace,\n        avatarAddData: avatar\n      });\n    }\n\n    return () => {\n      resetCVWizard();\n    };\n  }, [selectedCV, setCVWizardState, resetCVWizard]);\n\n  useEffect(() => {\n    if (isDirty) {\n      window.onbeforeunload = function () {\n        return 'Данные не сохранены. Вы уверены что хотите закрыть страницу?';\n      };\n    }\n    return () => {\n      window.onbeforeunload = null;\n    };\n  }, [isDirty]);\n\n  const uploadFileHandler = (file: File): Promise<string> => {\n    const uploadTask = storage.ref(`images/${file.name}`).put(file);\n\n    return new Promise((resolve, reject) => {\n      uploadTask.on(\n        'state_changed',\n        // eslint-disable-next-line\n        snapshot => {},\n        err => {\n          console.error(err);\n          enqueueSnackbar('Произошла ошибка сохранения изображения', { variant: 'error' });\n          reject(err);\n        },\n        () => {\n          storage\n            .ref('images')\n            .child(file.name)\n            .getDownloadURL()\n            .then(url => {\n              setCVWizardState({ avatarAddData: { ...avatarAddData, url } });\n              enqueueSnackbar('Изображение успешно загружено', { variant: 'success' });\n              resolve(url);\n            });\n        }\n      );\n    });\n  };\n\n  const saveCVHandler = async () => {\n    let url: string | undefined = avatarAddData?.url;\n\n    if (avatarAddData && avatarAddData.attachmentData) {\n      url = await uploadFileHandler(avatarAddData.attachmentData);\n    }\n\n    if (baseInfoData && educationInfoData && workInfoData) {\n      const data: ICVData = {\n        base: baseInfoData,\n        education: educationInfoData,\n        workplace: workInfoData,\n        avatar: { url: url },\n        additional: {\n          createDate: +moment()\n        }\n      };\n\n      setActiveStep\n        ? id &&\n          CVService.patchCV(id, data)\n            .then(() => {\n              enqueueSnackbar('Данные успешно сохранены', { variant: 'success' });\n              setTimeout(() => history.push(routerConfig.CV_VIEW.path({ id })), 1000);\n            })\n            .catch(err => {\n              console.error(err);\n              enqueueSnackbar('Произошла ошибка сохранения данных', { variant: 'error' });\n            })\n        : CVService.postCV(data)\n            .then(() => {\n              enqueueSnackbar('Данные успешно сохранены', { variant: 'success' });\n              setTimeout(() => history.push(routerConfig.CV.path()), 1000);\n            })\n            .catch(err => {\n              console.error(err);\n              enqueueSnackbar('Произошла ошибка сохранения данных', { variant: 'error' });\n            });\n    }\n  };\n\n  const onSubmit = () => {\n    if (activeStep === formWizard.length - 1) {\n      saveCVHandler();\n    } else {\n      setActiveStep\n        ? setActiveStep(activeStep + 1)\n        : history.push(routerConfig.CV_CREATE.path({ id: (activeStep + 2).toString() }));\n    }\n  };\n\n  const onBack = () => {\n    if (activeStep === 0) {\n      id ? history.push(routerConfig.CV_VIEW.path({ id })) : history.push(routerConfig.CV.path());\n    } else {\n      setActiveStep\n        ? setActiveStep(activeStep - 1)\n        : history.push(routerConfig.CV_CREATE.path({ id: activeStep.toString() }));\n    }\n  };\n\n  const formWizard = [\n    <BaseInfo key={0} stepHeaders={stepHeaders.baseInfo} onSubmit={onSubmit} onBack={onBack} />,\n    <EducationInfo\n      key={1}\n      stepHeaders={stepHeaders.educationInfo}\n      onSubmit={onSubmit}\n      onBack={onBack}\n    />,\n    <WorkInfo key={2} stepHeaders={stepHeaders.workInfo} onSubmit={onSubmit} onBack={onBack} />,\n    <AvatarAdd key={3} stepHeaders={stepHeaders.avatarAdd} onSubmit={onSubmit} onBack={onBack} />\n  ];\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  return formWizard[activeStep];\n};\n\nconst mapState = (s: IRootState) => ({\n  selectedCV: s.cv.selectedCV,\n  loading: s.loading.effects.cv.getCVById,\n  isDirty: s.cvWizard.isDirty,\n  baseInfoData: s.cvWizard.baseInfoData,\n  educationInfoData: s.cvWizard.educationInfoData,\n  workInfoData: s.cvWizard.workInfoData,\n  avatarAddData: s.cvWizard.avatarAddData\n});\n\nconst mapDispatch = (d: IDispatch) => ({\n  getCVById: d.cv.getCVById,\n  resetSelectedCV: d.cv.resetState,\n  setCVWizardState: d.cvWizard.setState,\n  resetCVWizard: d.cvWizard.resetState\n});\n\nconst withConnect = connect(mapState, mapDispatch);\n\nexport default withConnect(CVWizard);\n","import { makeStyles } from '@material-ui/core';\nimport DoneIcon from '@material-ui/icons/Done';\nimport clsx from 'clsx';\nimport React, { FC } from 'react';\n\ninterface ICounterProps {\n  number: number;\n  isDone?: boolean;\n}\n\nconst useStyles = makeStyles(({ spacing, colors, typography }) => ({\n  root: {\n    width: 35,\n    height: 35,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: spacing(2),\n    border: `2px solid ${colors.lightBlack}`,\n    borderRadius: '50%',\n    ...typography.subtitle1\n  },\n  done: {\n    color: colors.normalApple,\n    borderColor: colors.normalApple\n  }\n}));\n\nconst Counter: FC<ICounterProps> = ({ number, isDone }) => {\n  const classes = useStyles();\n  return (\n    <div className={clsx(classes.root, isDone && classes.done)}>\n      {isDone ? <DoneIcon /> : number}\n    </div>\n  );\n};\n\nexport default Counter;\n","import { Box, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { Spacer } from 'components/Spacer';\nimport React, { FC } from 'react';\nimport { IStepHeadersType } from 'routes/CV/shared/model';\n\nimport Counter from './Counter';\n\nexport const useStyles = makeStyles(({ spacing, colors }) => ({\n  hoverLink: {\n    cursor: 'pointer',\n    '&:hover': {\n      color: colors.normalBlackberry\n    }\n  },\n  active: {\n    color: colors.normalBlackberry\n  },\n  baseHeader: {\n    marginBottom: spacing(2)\n  },\n  subHeaderLink: {\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n  subHeader: {\n    marginLeft: spacing(2)\n  },\n  doneColor: {\n    color: colors.normalApple\n  }\n}));\n\ninterface INavigationProps {\n  headers: IStepHeadersType;\n  activeStep: number;\n  isClickable: boolean;\n  stepStatuses: boolean[];\n  setActiveStep?: (step: number) => void;\n}\n\nconst Navigation: FC<INavigationProps> = ({\n  headers,\n  activeStep,\n  isClickable,\n  stepStatuses,\n  setActiveStep\n}) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Spacer flexDirection=\"column\" spacing={2}>\n        {((Object.keys(headers) as unknown) as number[]).map((item, index) => (\n          <Box key={item} display=\"flex\">\n            <Counter number={index + 1} isDone={isClickable ? undefined : stepStatuses[index]} />\n            <Box display=\"flex\" flexDirection=\"column\" flexShrink={10}>\n              <Typography\n                variant=\"h3\"\n                className={clsx(\n                  classes.baseHeader,\n                  isClickable && classes.hoverLink,\n                  index === activeStep && classes.active,\n                  !isClickable && stepStatuses[index] && classes.doneColor\n                )}\n                onClick={() => (isClickable ? setActiveStep && setActiveStep(index) : null)}\n              >\n                {headers[item].baseHeader}\n              </Typography>\n              <Spacer flexDirection=\"column\" spacing={2}>\n                {headers[item].subHeaders?.map(subHeader => (\n                  <Typography\n                    key={subHeader.id}\n                    variant=\"body1\"\n                    className={clsx(\n                      classes.subHeader,\n                      index === activeStep && classes.subHeaderLink\n                    )}\n                    component={index === activeStep ? 'a' : 'span'}\n                    href={`#${subHeader.id}`}\n                  >\n                    - {subHeader.title}\n                  </Typography>\n                ))}\n              </Spacer>\n            </Box>\n          </Box>\n        ))}\n      </Spacer>\n    </>\n  );\n};\n\nexport default Navigation;\n","import {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  makeStyles,\n  Paper,\n  Typography\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Navigation from 'components/Navigation';\nimport { FC } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { IDispatch, IRootState } from 'store';\n\nimport { stepHeaders } from '../CVWizard/config';\n\ntype IConnectedProps = ConnectedProps<typeof withConnect>;\ninterface INavigationWrapperProps extends IConnectedProps {\n  activeStep: number;\n  isMobile: boolean;\n  isClickable: boolean;\n  setActiveStep?: (step: number) => void;\n}\n\nconst useStyles = makeStyles(({ spacing }) => ({\n  root: {\n    padding: spacing(4, 3)\n  },\n  accordion: {\n    boxShadow: 'none'\n  }\n}));\n\nconst NavigationWrapper: FC<INavigationWrapperProps> = ({\n  activeStep,\n  isMobile,\n  isClickable,\n  setActiveStep,\n  confirmModal,\n  isDirty,\n  stepStatuses,\n  onConfirm\n}) => {\n  const classes = useStyles();\n\n  const openModal = (step: number) => {\n    if (setActiveStep) {\n      confirmModal({\n        title: 'Имеются несохраненные данные, сохранить?',\n        onSubmit: () => {\n          setActiveStep(step);\n          onConfirm && onConfirm();\n        }\n      });\n    }\n  };\n\n  const navigation = (\n    <Navigation\n      headers={stepHeaders}\n      activeStep={activeStep}\n      stepStatuses={stepStatuses}\n      setActiveStep={isDirty ? openModal : setActiveStep}\n      isClickable={isClickable}\n    />\n  );\n\n  return isMobile ? (\n    <Accordion className={classes.accordion}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        <Typography variant=\"body1\">Навигация по форме</Typography>\n      </AccordionSummary>\n      <AccordionDetails>{navigation}</AccordionDetails>\n    </Accordion>\n  ) : (\n    <Paper elevation={0} className={classes.root}>\n      {navigation}\n    </Paper>\n  );\n};\n\nconst mapState = (s: IRootState) => ({\n  isDirty: s.cvWizard.isDirty,\n  onConfirm: s.cvWizard.onConfirm,\n  stepStatuses: s.cvWizard.stepStatuses\n});\n\nconst mapDispatch = (d: IDispatch) => ({\n  confirmModal: d.modal.confirmModal\n});\n\nconst withConnect = connect(mapState, mapDispatch);\n\nexport default withConnect(NavigationWrapper);\n","import { Box, Grid, makeStyles, Paper, useMediaQuery, useTheme } from '@material-ui/core';\nimport { LinkButton } from 'components';\nimport { IIdParams, routerConfig } from 'config/router';\nimport Wrapper from 'hoc/Wrapper';\nimport React, { FC, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport CVWizard from '../shared/CVWizard';\nimport NavigationWrapper from '../shared/NavigationWrapper';\n\nconst useStyles = makeStyles(({ spacing }) => ({\n  root: {\n    padding: spacing(4, 3)\n  }\n}));\n\nconst defaultStep = 0;\n\nconst CVCreate: FC = () => {\n  const classes = useStyles();\n\n  const { id } = useParams<IIdParams>();\n  const stepNum = +id - 1;\n\n  const config = routerConfig.CV_CREATE;\n  config.extra = {\n    nameSuffix: ` ${(stepNum + 1).toString()}`\n  };\n\n  const [activeStep, setActiveStep] = useState(defaultStep);\n\n  useEffect(() => {\n    setActiveStep(stepNum);\n\n    return () => {\n      setActiveStep(defaultStep);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [stepNum]);\n\n  const theme = useTheme();\n  const sm = useMediaQuery(theme.breakpoints.down('sm'));\n\n  return (\n    <Wrapper\n      routerConfig={config}\n      headerExtra={<LinkButton to={routerConfig.CV.path()}>Сохраненные резюме</LinkButton>}\n    >\n      <Box mt={3}>\n        <Grid container spacing={sm ? 3 : 6}>\n          <Grid item xs={12} md={4}>\n            <NavigationWrapper\n              isMobile={sm}\n              activeStep={activeStep}\n              setActiveStep={setActiveStep}\n              isClickable={false}\n            />\n          </Grid>\n          <Grid item xs={12} md={8}>\n            <Paper elevation={0} className={classes.root}>\n              <CVWizard activeStep={activeStep} />\n            </Paper>\n          </Grid>\n        </Grid>\n      </Box>\n    </Wrapper>\n  );\n};\nexport default CVCreate;\n","import { Box, Grid, makeStyles, Paper, useMediaQuery, useTheme } from '@material-ui/core';\nimport { LinkButton } from 'components';\nimport { IIdParams, routerConfig } from 'config/router';\nimport Wrapper from 'hoc/Wrapper';\nimport React, { FC, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport CVWizard from '../shared/CVWizard';\nimport NavigationWrapper from '../shared/NavigationWrapper';\n\nconst useStyles = makeStyles(({ spacing }) => ({\n  root: {\n    padding: spacing(4, 3)\n  }\n}));\n\nconst defaultStep = 0;\n\nconst CVEdit: FC = () => {\n  const classes = useStyles();\n\n  const { id } = useParams<IIdParams>();\n\n  const [activeStep, setActiveStep] = useState(defaultStep);\n\n  const theme = useTheme();\n  const sm = useMediaQuery(theme.breakpoints.down('sm'));\n\n  return (\n    <Wrapper\n      routerConfig={routerConfig.CV_EDIT}\n      headerExtra={\n        <Box display=\"flex\">\n          <LinkButton to={routerConfig.CV.path()}>Сохраненные резюме</LinkButton>\n          <LinkButton to={routerConfig.CV_VIEW.path({ id })}>Резюме</LinkButton>\n        </Box>\n      }\n    >\n      <Box mt={3}>\n        <Grid container spacing={sm ? 3 : 6}>\n          <Grid item xs={12} md={4}>\n            <NavigationWrapper\n              isMobile={sm}\n              activeStep={activeStep}\n              isClickable\n              setActiveStep={setActiveStep}\n            />\n          </Grid>\n          <Grid item xs={12} md={8}>\n            <Paper elevation={0} className={classes.root}>\n              <CVWizard activeStep={activeStep} id={id} setActiveStep={setActiveStep} />\n            </Paper>\n          </Grid>\n        </Grid>\n      </Box>\n    </Wrapper>\n  );\n};\n\nexport default CVEdit;\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(({ colors, spacing, typography, customShadows }) => ({\n  card: {\n    width: 275,\n    height: 275,\n    cursor: 'pointer',\n    borderRadius: 16,\n    boxShadow: customShadows.card,\n\n    '&:hover': {\n      boxShadow: customShadows.cardHover\n    }\n  },\n  headerTitle: {\n    ...typography.h6\n  },\n  cardContent: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center'\n  },\n  img: {\n    height: 144,\n    objectFit: 'cover',\n    marginBottom: spacing(1)\n  },\n  btn: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n\n    '&:hover $addIcon': {\n      fill: colors.greyRaven\n    }\n  },\n  addIcon: {\n    fontSize: 46,\n    fill: colors.greyHeather\n  }\n}));\n","import {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  CardMedia,\n  CircularProgress,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  IconButton,\n  Paper,\n  Typography\n} from '@material-ui/core';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport CloseIcon from '@material-ui/icons/Close';\nimport clsx from 'clsx';\nimport { MOMENT_DATE_SHORT } from 'config/common';\nimport { routerConfig } from 'config/router';\nimport Wrapper from 'hoc/Wrapper';\nimport moment from 'moment';\nimport { useSnackbar } from 'notistack';\nimport React, { FC, MouseEvent, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { CVService } from 'services';\nimport { IDispatch, IRootState } from 'store';\n\nimport { useStyles } from './styles';\n\nconst CV: FC = () => {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n  const { cvsMap, loading } = useSelector((s: IRootState) => ({\n    cvsMap: s.cv.cvsMap,\n    loading: s.loading.effects.cv.getCVs\n  }));\n\n  const {\n    cv: { getCVs, resetState: resetCVsMap }\n  } = useDispatch<IDispatch>();\n\n  const [deleteModalOpen, setDeleteModalOpen] = useState(false);\n  const [selectedCVId, setSelectedCVId] = useState('');\n\n  useEffect(() => {\n    getCVs();\n\n    return () => {\n      resetCVsMap();\n    };\n  }, [getCVs, resetCVsMap]);\n\n  const deleteModalOpenHandler = (id: string) => (event: MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    setDeleteModalOpen(true);\n    setSelectedCVId(id);\n  };\n\n  const deleteModalCloseHandler = () => {\n    setDeleteModalOpen(false);\n    setSelectedCVId('');\n  };\n\n  const deleteCV = () => {\n    CVService.deleteCVbyId(selectedCVId)\n      .then(() => {\n        enqueueSnackbar('Резюме успешно удалено', { variant: 'success' });\n        getCVs();\n      })\n      .catch(() => {\n        enqueueSnackbar('Произошла ошибка при удалении резюме', { variant: 'error' });\n      });\n    deleteModalCloseHandler();\n  };\n\n  return (\n    <Wrapper routerConfig={routerConfig.CV}>\n      {loading ? (\n        <Box mx=\"auto\" my=\"auto\">\n          <CircularProgress />\n        </Box>\n      ) : (\n        <Box mt={3}>\n          <Grid container spacing={6}>\n            <Grid item>\n              <Link to={routerConfig.CV_CREATE.path({ id: '1' })}>\n                <Paper className={clsx(classes.btn, classes.card)}>\n                  <AddCircleOutlineIcon fontSize=\"large\" className={classes.addIcon} />\n                </Paper>\n              </Link>\n            </Grid>\n\n            {cvsMap &&\n              Object.keys(cvsMap).map(item => {\n                const cv = cvsMap[item];\n                return (\n                  <Grid item key={item}>\n                    <Link to={routerConfig.CV_VIEW.path({ id: item })}>\n                      <Card className={classes.card}>\n                        <CardHeader\n                          title={cv.education.position}\n                          classes={{ title: classes.headerTitle }}\n                          action={\n                            <IconButton onClick={deleteModalOpenHandler(item)}>\n                              <CloseIcon />\n                            </IconButton>\n                          }\n                        />\n                        <CardMedia\n                          className={classes.img}\n                          image={cv.avatar?.url || '/imgs/no-photo.jpg'}\n                        />\n                        <CardContent className={classes.cardContent}>\n                          <Typography variant=\"caption\">\n                            Опубликовано:{' '}\n                            {moment(cv.additional.createDate).format(MOMENT_DATE_SHORT)}\n                          </Typography>\n                        </CardContent>\n                      </Card>\n                    </Link>\n                  </Grid>\n                );\n              })}\n          </Grid>\n          <Dialog open={deleteModalOpen} onClose={deleteModalCloseHandler}>\n            <DialogTitle>Удаление резюме</DialogTitle>\n            <DialogContent>Подтвердите удаление выбранного резюме</DialogContent>\n            <DialogActions>\n              <Button onClick={deleteModalCloseHandler}>Отмена</Button>\n              <Button onClick={deleteCV} color=\"primary\" autoFocus>\n                Удалить\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </Box>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default CV;\n","export const gender = {\n  male: 'Мужчина',\n  female: 'Женщина'\n};\n\nexport const relocation = {\n  impossible: 'Не готов к переезду',\n  possible: 'Готов к переезду',\n  desirable: 'Переезд невозможен'\n};\n\nexport const businessTripReady = {\n  never: 'Не готов к командировкам',\n  ready: 'Готов к командировкам',\n  sometimes: 'Иногда готов к командировкам'\n};\n\nexport const money = {\n  rub: 'руб',\n  usd: 'долл',\n  eur: 'евро'\n};\n","import moment from 'moment';\n\nexport function getAgeString(date: string | number): string {\n  const age = moment().diff(date, 'years');\n\n  return `${age} ${declOfNum(age, ageList)}`;\n}\n\nconst ageList = ['год', 'года', 'лет'];\n\nfunction declOfNum(number: number, titles: string[]) {\n  const cases = [2, 0, 1, 1, 1, 2];\n  return titles[\n    number % 100 > 4 && number % 100 < 20 ? 2 : cases[number % 10 < 5 ? number % 10 : 5]\n  ];\n}\n\ntype IOptionsType = Array<{ id: string; name: string }>;\n\nexport function _get(optiopns: IOptionsType, id: string): string {\n  const value = optiopns.find(item => item.id === id);\n\n  return value?.name || 'Запись не найдена';\n}\n","import {\n  Box,\n  CircularProgress,\n  Divider,\n  Grid,\n  Link,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n  Typography,\n  useMediaQuery,\n  useTheme\n} from '@material-ui/core';\nimport { LinkButton } from 'components';\nimport { MOMENT_DATE_SHORT } from 'config/common';\nimport { businessTripReady, gender, money, relocation } from 'config/cv';\nimport { IIdParams, routerConfig } from 'config/router';\nimport Wrapper from 'hoc/Wrapper';\nimport moment from 'moment';\nimport React, { FC } from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { IDispatch, IRootState } from 'store';\nimport { _get, getAgeString } from 'utils';\n\nimport { livingCityTemp } from '../shared/containers/BaseInfo/tempValues';\nimport { langugesTemp, skillsTemp } from '../shared/containers/EducationInfo/tempValues';\nimport { monthList, regionTemp } from '../shared/containers/WorkInfo/tempValues';\n\nconst useStyles = makeStyles(() => ({\n  paragraph: {\n    whiteSpace: 'pre-wrap'\n  }\n}));\n\nconst CVView: FC = () => {\n  const { id } = useParams<IIdParams>();\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const sm = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const { selectedCV, loading } = useSelector((s: IRootState) => ({\n    selectedCV: s.cv.selectedCV,\n    loading: s.loading.effects.cv.getCVById\n  }));\n\n  const {\n    cv: { getCVById, resetState: resetSelectedCV }\n  } = useDispatch<IDispatch>();\n\n  useEffect(() => {\n    if (id) {\n      getCVById(id);\n    }\n\n    return () => {\n      resetSelectedCV();\n    };\n  }, [id, getCVById, resetSelectedCV]);\n\n  let context: JSX.Element | undefined;\n\n  if (loading) {\n    context = (\n      <Box mx=\"auto\" my=\"auto\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (selectedCV) {\n    const { base, education, workplace, avatar, additional } = selectedCV;\n\n    context = (\n      <Grid container spacing={2}>\n        <Grid item container xs={12} sm={8}>\n          <Grid item xs={12}>\n            <Typography variant=\"h2\">\n              {base.lastName} {base.firstName}\n            </Typography>\n            <Typography variant=\"subtitle2\">\n              {base.gender && gender[base.gender]}, {getAgeString(base.birthDate)}, родился{' '}\n              {moment(base.birthDate).format(MOMENT_DATE_SHORT)}\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant=\"subtitle2\">\n              Город проживания: {_get(livingCityTemp, base.livingCityId)}\n              {base.relocation ? ', ' + relocation[base.relocation] : ''}\n            </Typography>\n            <Typography variant=\"subtitle2\">\n              {base.movingCityId\n                ? 'Предпочтительный город переезда: ' + _get(livingCityTemp, base.movingCityId)\n                : ''}\n              {base.businessTripReady ? businessTripReady[base.businessTripReady] : ''}\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant=\"subtitle2\">\n              Дата создания резюме: {moment(additional.createDate).format(MOMENT_DATE_SHORT)}\n            </Typography>\n          </Grid>\n        </Grid>\n\n        <Grid item container xs={12} sm={4} justifyContent={sm ? 'center' : 'flex-end'}>\n          <img\n            src={avatar?.url || '/imgs/no-photo.jpg'}\n            alt=\"Фото\"\n            style={{ width: 'auto', height: '200px', objectFit: 'contain' }}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Divider />\n        </Grid>\n        <Grid item xs={12}>\n          <Box display=\"flex\" justifyContent=\"space-between\">\n            <Typography variant=\"h3\">{education.position}</Typography>\n            {education.salary && (\n              <Typography variant=\"h3\">\n                {education.salary} {money[education.moneyTypeId]}.\n              </Typography>\n            )}\n          </Box>\n        </Grid>\n        {workplace.workPlace && (\n          <Grid item xs={12}>\n            <Typography variant=\"subtitle1\">Место работы</Typography>\n            {workplace.workPlace.map((item, index) => (\n              <Box key={index} display=\"flex\">\n                {item.monthStart && (\n                  <Box width={160}>\n                    <Typography variant=\"subtitle2\">\n                      {_get(monthList, item.monthStart)} {item.yearStart} -{' '}\n                      {item.monthEnd\n                        ? _get(monthList, item.monthEnd) + ' ' + item.yearEnd\n                        : 'По н/в'}\n                    </Typography>\n                  </Box>\n                )}\n                <Box display=\"flex\" flexDirection=\"column\" ml={2}>\n                  <Typography variant=\"subtitle2\">{item.company}</Typography>\n                  {item.regionId && (\n                    <Typography variant=\"subtitle2\">{_get(regionTemp, item.regionId)}</Typography>\n                  )}\n                  <Typography variant=\"subtitle2\">{item.site}</Typography>\n                  <Typography variant=\"subtitle2\">{item.position}</Typography>\n                  <Typography variant=\"subtitle2\" className={classes.paragraph}>\n                    {item.positionDuties}\n                  </Typography>\n                </Box>\n              </Box>\n            ))}\n          </Grid>\n        )}\n        <Grid item xs={12}>\n          <Typography variant=\"subtitle1\">Ключевые навыки</Typography>\n          <List disablePadding>\n            {education.skills.map(item => (\n              <ListItem key={item} style={{ paddingTop: 0, paddingBottom: 0 }}>\n                <ListItemIcon style={{ minWidth: 16 }}>\n                  <span>•</span>\n                </ListItemIcon>\n                <ListItemText\n                  id={item}\n                  primary={<Typography variant=\"subtitle2\">{_get(skillsTemp, item)}</Typography>}\n                />\n              </ListItem>\n            ))}\n          </List>\n        </Grid>\n        {workplace.aboutSelf && (\n          <Grid item xs={12}>\n            <Typography variant=\"subtitle1\">Обо мне</Typography>\n            <Typography variant=\"subtitle2\" className={classes.paragraph}>\n              {workplace.aboutSelf}\n            </Typography>\n          </Grid>\n        )}\n        <Grid item xs={12}>\n          <Divider />\n        </Grid>\n        {education.education && (\n          <Grid item xs={12}>\n            <Typography variant=\"subtitle1\">Образование</Typography>\n            {education.education.map((item, index) => (\n              <Box key={index} display=\"flex\">\n                <Box width={160}>\n                  <Typography variant=\"subtitle2\">{item.finishYear}</Typography>\n                </Box>\n                <Box display=\"flex\" flexDirection=\"column\" ml={2}>\n                  <Typography variant=\"subtitle2\">{item.institutionName}</Typography>\n                  <Typography variant=\"subtitle2\">{item.faculty}</Typography>\n                  <Typography variant=\"subtitle2\">{item.specialization}</Typography>\n                </Box>\n              </Box>\n            ))}\n          </Grid>\n        )}\n        <Grid item xs={12}>\n          <Typography variant=\"subtitle1\">Знание языков</Typography>\n          <Typography variant=\"subtitle2\">\n            {_get(langugesTemp, education.nativeLanguageId)} - Родной\n          </Typography>\n          {education.foreignLanguages &&\n            education.foreignLanguages.map(item => (\n              <Typography variant=\"subtitle2\" key={item}>\n                {_get(langugesTemp, item)}\n              </Typography>\n            ))}\n        </Grid>\n        <Grid item xs={12}>\n          <Typography variant=\"subtitle1\">Наличие автомобиля</Typography>\n          <Typography variant=\"subtitle2\">\n            Автомобиль - {workplace.haveCar ? 'Имеется' : 'Отсутствует'}\n          </Typography>\n          <Typography variant=\"subtitle2\">\n            Категория прав - {workplace.licenseA && 'А'} {workplace.licenseB && 'B'}{' '}\n            {workplace.licenseC && 'C'} {workplace.licenseD && 'D'} {workplace.licenseE && 'E'}{' '}\n            {workplace.licenseBE && 'BE'} {workplace.licenseCE && 'CE'}{' '}\n            {workplace.licenseDE && 'DE'}\n          </Typography>\n        </Grid>\n        {workplace.portfolio && (\n          <Grid item xs={12}>\n            <Typography variant=\"subtitle1\">Потфолио</Typography>\n            <Typography variant=\"subtitle2\">\n              <Link href={workplace.portfolio}>Перейти по ссылке</Link>\n            </Typography>\n          </Grid>\n        )}\n      </Grid>\n    );\n  } else {\n    context = <Typography variant=\"subtitle2\">Нет данных</Typography>;\n  }\n\n  return (\n    <Wrapper\n      routerConfig={routerConfig.CV_VIEW}\n      headerExtra={\n        <Box display=\"flex\" justifyContent=\"space-between\">\n          <LinkButton to={routerConfig.CV.path()}>Сохраненные резюме</LinkButton>\n          <LinkButton to={routerConfig.CV_EDIT.path({ id })} color=\"primary\" noIcon>\n            Изменить\n          </LinkButton>\n        </Box>\n      }\n    >\n      {context}\n    </Wrapper>\n  );\n};\n\nexport default CVView;\n","import { default as Create } from './CVCreate';\nimport { default as Edit } from './CVEdit';\nimport { default as List } from './CVList';\nimport { default as View } from './CVView';\n\nexport default { Create, Edit, List, View };\n","import { Box, Button, makeStyles } from '@material-ui/core';\nimport { routerConfig } from 'config/router';\nimport Wrapper from 'hoc/Wrapper';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles(({ spacing }) => ({\n  img: {\n    maxWidth: 400,\n    width: '100%'\n  },\n  btn: {\n    marginTop: spacing(2),\n    width: 'fit-content'\n  }\n}));\n\nconst NotFound: FC = () => {\n  const classes = useStyles();\n  return (\n    <Wrapper routerConfig={routerConfig.NOT_FOUND} noHeader>\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n        <img src=\"/imgs/404-page-not-found.png\" className={classes.img} />\n        <Button\n          component={Link}\n          to={routerConfig.CV.path()}\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.btn}\n        >\n          На главную\n        </Button>\n      </Box>\n    </Wrapper>\n  );\n};\n\nexport default NotFound;\n","import { routerConfig } from 'config/router';\nimport React, { FC } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport { CV, NotFound } from '.';\n\nconst Root: FC = () => {\n  return (\n    <Switch>\n      <Redirect exact from={routerConfig.HOME.path()} to={routerConfig.CV.path()} />\n      <Route {...routerConfig.CV.routeProps}>\n        <CV.List />\n      </Route>\n      <Route {...routerConfig.CV_CREATE.routeProps}>\n        <CV.Create />\n      </Route>\n      <Route {...routerConfig.CV_VIEW.routeProps}>\n        <CV.View />\n      </Route>\n      <Route {...routerConfig.CV_EDIT.routeProps}>\n        <CV.Edit />\n      </Route>\n      <Route {...routerConfig.NOT_FOUND.routeProps}>\n        <NotFound />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default Root;\n","import { createTheme, Theme } from '@material-ui/core';\n\nexport interface IColors {\n  darkRed: string;\n  black: string;\n  deepBlue: string;\n  midnightBlue: string;\n  greyRaven: string;\n  greyChateau: string;\n  greyHeather: string;\n  linkWater: string;\n  linkLightSecondary: string;\n  normalLinkWater: string;\n  white: string;\n  lightestYellow: string;\n  lightBlueberry: string;\n  lightGray: string;\n  lightBlackberry: string;\n  lightApple: string;\n  lightPlum: string;\n  lightCranberry: string;\n  lightStroke: string;\n  whiteSmoke: string;\n  normalApple: string;\n  normalBlueberry: string;\n  normalMint: string;\n  normalOrange: string;\n  normalRaspberry: string;\n  normalCranberry: string;\n  normalBlackberry: string;\n  normalPlum: string;\n  normalYellow: string;\n  darkBlueberry: string;\n  darkApple: string;\n  darkYellow: string;\n  darkMint: string;\n  darkLime: string;\n  darkPlum: string;\n  darkOrange: string;\n  darkestYellow: string;\n  darkestMint: string;\n  darkestLime: string;\n  darkestCranberry: string;\n  sinApple: string;\n  silverMyst: string;\n  cheatas: string;\n  navyBlue: string;\n  dodgerBlue: string;\n  silverSand: string;\n  aliceBlue: string;\n  lavender: string;\n  lightBlack: string;\n  inactiveTabbar: string;\n  lightestOrange: string;\n  textSecondary: string;\n}\n\n/**\n * Цветовая палитра\n */\nconst mapColor: IColors = {\n  darkRed: '#E30611',\n  black: '#000',\n  lightBlack: '#1D2023',\n  deepBlue: '#001424',\n  midnightBlue: '#202D3D',\n  greyRaven: '#6E7782',\n  greyChateau: '#9198A0',\n  greyHeather: '#BBC1C7',\n  linkWater: '#E2E5EB',\n  linkLightSecondary: '#969FA8',\n  normalLinkWater: '#E7EAFA',\n  white: '#FFF',\n  lightestYellow: '#FFFDE8',\n  lightBlueberry: '#45B6FC',\n  lightGray: '#d3d3d3',\n  lightBlackberry: '#6384E0',\n  lightApple: '#74DF8B',\n  lightPlum: '#A86EA7',\n  lightCranberry: '#E677AD',\n  lightStroke: '#BCC3D0',\n  whiteSmoke: '#F2F3F7',\n  normalApple: '#26CD58',\n  normalBlueberry: '#0097FD',\n  normalMint: '#00C19B',\n  normalOrange: '#F95721',\n  normalRaspberry: '#EA1F49',\n  normalCranberry: '#E54887',\n  normalBlackberry: '#014FCE',\n  normalYellow: '#FBE739',\n  normalPlum: '#883888',\n  darkApple: '#04AA42',\n  darkBlueberry: '#007CFF',\n  darkYellow: '#FAC031',\n  darkMint: '#03A17B',\n  darkLime: '#A6C100',\n  darkPlum: '#6D2D79',\n  darkOrange: '#E04A17',\n  darkestYellow: '#F37F19',\n  darkestMint: '#00724D',\n  darkestLime: '#808201',\n  darkestCranberry: '#7F3363',\n  sinApple: '#03AD00',\n  silverMyst: '#D3DAE1',\n  cheatas: '#F9B021',\n  navyBlue: '#0077DB',\n  dodgerBlue: '#0097FD',\n  silverSand: '#C4C4C4',\n  aliceBlue: '#F8F9FB',\n  lavender: '#E9EBF7',\n  inactiveTabbar: '#AEB5BD',\n  lightestOrange: '#FBE9E7',\n  textSecondary: '#626C77'\n};\n\ninterface ICustomShadows {\n  card: string;\n  cardHover: string;\n}\n\n/**\n * Расширяем дефолтный интерфейс Theme\n */\ndeclare module '@material-ui/core/styles/createTheme' {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  interface Theme {\n    colors: IColors;\n    customShadows: ICustomShadows;\n  }\n  // allow configuration using `createTheme`\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  interface ThemeOptions {\n    colors: IColors;\n    customShadows: ICustomShadows;\n  }\n}\n\nconst theme: Theme = createTheme({\n  typography: {\n    fontFamily: '\"Source Sans Pro\", \"Arial\", sans-serif',\n    allVariants: {\n      color: mapColor.lightBlack\n    },\n    fontSize: 16,\n    fontWeightRegular: 400,\n    fontWeightMedium: 500,\n    fontWeightBold: 600,\n    h1: {\n      fontSize: 32,\n      lineHeight: '36px',\n      fontWeight: 600\n    },\n    h2: {\n      fontSize: 24,\n      fontWeight: 600,\n      lineHeight: '28px'\n    },\n    h3: {\n      fontSize: 20,\n      fontWeight: 600,\n      lineHeight: '24px'\n    },\n    h4: {\n      fontSize: 20,\n      fontWeight: 500,\n      lineHeight: '25px'\n    },\n    h5: {\n      fontSize: 20,\n      fontWeight: 400,\n      lineHeight: '28px'\n    },\n    h6: {\n      fontSize: 17,\n      fontWeight: 600,\n      lineHeight: '24px'\n    },\n    subtitle1: {\n      fontSize: 17,\n      fontWeight: 500,\n      lineHeight: '24px'\n    },\n    body1: {\n      fontSize: 17,\n      fontWeight: 400,\n      lineHeight: '24px'\n    },\n    body2: {\n      fontSize: 14,\n      fontWeight: 500,\n      lineHeight: '24px'\n    },\n    subtitle2: {\n      fontSize: 14,\n      fontWeight: 400,\n      lineHeight: '20px'\n    },\n    caption: {\n      fontSize: 12,\n      fontWeight: 400,\n      lineHeight: '16px'\n    }\n  },\n  palette: {\n    primary: {\n      main: mapColor.darkRed\n    },\n    /**\n     * Перезаписываем дефолтный цвет background\n     */\n    background: {\n      default: mapColor.whiteSmoke\n    },\n    /**\n     * Перезаписываем дефолтный цвет текста secondary\n     */\n    text: {\n      secondary: mapColor.textSecondary\n    }\n  },\n  colors: mapColor,\n  customShadows: {\n    card: '0px 0px 16px rgba(0, 0, 0, 0.08), 0px 4px 16px rgba(0, 0, 0, 0.08)',\n    cardHover: '0px 7px 22px 0px rgba(0, 0, 0, 0.28)'\n  },\n  props: { MuiTextField: { autoComplete: 'off' } }\n});\n\nexport default theme;\nexport { mapColor };\n","import 'moment/locale/ru';\n\nimport MomentUtils from '@date-io/moment';\nimport { CssBaseline, MuiThemeProvider } from '@material-ui/core';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport ModalContextProvider from 'components/ModalContext';\nimport Notifier from 'components/Notifier';\nimport moment from 'moment';\nimport { SnackbarProvider } from 'notistack';\nimport React, { FC } from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport Root from 'routes/routes';\nimport { store } from 'store';\nimport theme from 'theme';\n\nconst App: FC = () => {\n  const locale = 'ru';\n  moment.locale(locale);\n\n  return (\n    <Provider store={store}>\n      <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils} locale={locale}>\n        <MuiThemeProvider theme={theme}>\n          <CssBaseline />\n          <SnackbarProvider\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'right'\n            }}\n          >\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\n              <Root />\n              <Notifier />\n              <ModalContextProvider />\n            </BrowserRouter>\n          </SnackbarProvider>\n        </MuiThemeProvider>\n      </MuiPickersUtilsProvider>\n    </Provider>\n  );\n};\n\nexport default App;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\nimport './yupConfig';\nimport './store';\n\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}